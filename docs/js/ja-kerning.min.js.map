{"version":3,"sources":["ja-kerning.js"],"names":["window","NS","hasClass","tar","cls","key","substr","startsWith","undefined","dataset","classList","contains","setClass","enabled","val","c","join","add","remove","removeKerning","elm","opts","s","getElementsByTagName","styleKerning","df","document","createDocumentFragment","childNodes","appendChild","parentNode","replaceChild","kernElement","dict","nodeType","styleDisabled","ignoredTags","includes","tagName","kernTextNode","tn","isHead","isTail","p","HTMLElement","pd","getComputedStyle","display","isSiblingBlock","length","pp","isEnd","str","textContent","mzs","match","replace","removeHeadWhiteSpaces","removeTailWhiteSpaces","g1","d","g2","removeWhiteSpacesBetweenZenChars","nt","nextSibling","innerText","parentNext","ks","getKerning","doAssignAttribute","f","createFragment","n","greedy","isPreviousBlockGreedy","previousSibling","isBlock","trim","nextNodeText","assignAttr","strArray","ret","concat","l","i","c0","c1","a","has","push","k","Number","isInteger","createTextNode","slice","createElement","style","Set","addPairs","cs0","cs1","addSolos","head","h","applyKerning","ts","Object","assign","doDisableOnSelecting","map","e","toUpperCase","t","removeEventListener","addEventListener","applyKerningToString"],"mappings":"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","file":"ja-kerning.min.js","sourcesContent":["/**\n * Japanese Text - Kerning\n *\n * @author Takuto Yanagida\n * @version 2021-12-26\n */\n\n'use strict';\n\nwindow['NACSS']       = window['NACSS']       || {};\nwindow['NACSS']['ja'] = window['NACSS']['ja'] || {};\n\n\n((NS) => {\n\n\t/**\n\t * Style Class Utilities\n\t *\n\t * @author Takuto Yanagida\n\t * @version 2021-11-11\n\t */\n\t\n\tfunction hasClass(tar, cls) {\n\t\tconst key = cls.substr(1);\n\t\tif (cls.startsWith(':')) {\n\t\t\treturn tar.dataset[key] !== undefined;\n\t\t} else {\n\t\t\treturn tar.classList.contains(key);\n\t\t}\n\t}\n\t\n\tfunction setClass(tar, cls, enabled = true, val = '') {\n\t\tconst key = cls.substr(1);\n\t\tif (cls.startsWith(':')) {\n\t\t\tif (enabled) {\n\t\t\t\ttar.dataset[key] = val;\n\t\t\t} else {\n\t\t\t\tdelete tar.dataset[key];\n\t\t\t}\n\t\t} else {\n\t\t\tconst c = [key, val].join('-');\n\t\t\tif (enabled) {\n\t\t\t\ttar.classList.add(c);\n\t\t\t} else {\n\t\t\t\ttar.classList.remove(c);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction getSelector(cls) {\n\t\tif (cls.startsWith(':')) {\n\t\t\treturn `*[data-${cls.substr(1).replace(/([A-Z])/g, c => '-' + c.charAt(0).toLowerCase())}]`;\n\t\t} else {\n\t\t\treturn `*${cls}`;\n\t\t}\n\t}\n\t\n\n\t/**\n\t * Kerning\n\t *\n\t * @author Takuto Yanagida\n\t * @version 2023-03-30\n\t */\n\t\n\tfunction apply(ts, opts = {}) {\n\t\tif (ts.length === 0) return;\n\t\n\t\topts = Object.assign({\n\t\t\tstyleKerning        : ':ncKern',\n\t\t\tstyleDisabled       : ':ncNoKerning',\n\t\t\tignoredTags         : ['PRE'],\n\t\t\tdoAssignAttribute   : true,\n\t\t\tdoDisableOnSelecting: true,\n\t\t}, opts);\n\t\topts.ignoredTags = opts.ignoredTags.map(e => e.toUpperCase());\n\t\n\t\tfor (const t of ts) {\n\t\t\tkernElement(t, dict, opts);\n\t\t\tif (opts['doAssignAttribute'] && opts['doDisableOnSelecting']) {\n\t\t\t\tconst f = () => {\n\t\t\t\t\tremoveKerning(t, opts);\n\t\t\t\t\tt.removeEventListener('selectstart', f);\n\t\t\t\t};\n\t\t\t\tt.addEventListener('selectstart', f);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction removeKerning(elm, opts) {\n\t\tfor (const s of [...elm.getElementsByTagName('span')]) {\n\t\t\tif (hasClass(s, opts.styleKerning)) {\n\t\t\t\tconst df = document.createDocumentFragment();\n\t\t\t\tfor (const c of [...s.childNodes]) {\n\t\t\t\t\tdf.appendChild(c);\n\t\t\t\t}\n\t\t\t\ts.parentNode.replaceChild(df, s);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction applyToString(str, opts = {}) {\n\t\topts = Object.assign({\n\t\t\tstyleKerning     : ':ncKern',\n\t\t\tstyleDisabled    : ':ncNoKerning',\n\t\t\tdoAssignAttribute: true,\n\t\t}, opts);\n\t\n\t\tconst ks = getKerning(str, dict, false, opts.doAssignAttribute);\n\t\tif (ks.length) {\n\t\t\treturn createFragment(str, ks, opts);\n\t\t}\n\t\treturn null;\n\t}\n\t\n\t\n\t// -----------------------------------------------------------------------------\n\t\n\t\n\tfunction kernElement(elm, dict, opts) {\n\t\tfor (const c of [...elm.childNodes]) {\n\t\t\tif (c.nodeType === 1) {  // ELEMENT_NODE\n\t\t\t\tif (!hasClass(c, opts.styleDisabled) && !opts.ignoredTags.includes(c.tagName)) {\n\t\t\t\t\tkernElement(c, dict, opts);\n\t\t\t\t}\n\t\t\t} else if (c.nodeType === 3) {  // TEXT_NODE\n\t\t\t\tkernTextNode(c, dict, opts);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction kernTextNode(tn, dict, opts) {\n\t\tconst [isHead, isTail] = isEnd(tn);\n\t\n\t\tlet str = tn.textContent;\n\t\tif (isHead) str = removeHeadWhiteSpaces(str);\n\t\tif (isTail) str = removeTailWhiteSpaces(str);\n\t\tstr = removeWhiteSpacesBetweenZenChars(str);\n\t\n\t\tlet nt = '';\n\t\tif (tn.nextSibling && tn.nextSibling.nodeType === 1 && getComputedStyle(tn.nextSibling).display === 'inline') {\n\t\t\tnt = tn.nextSibling.innerText;\n\t\t}\n\t\tif (!tn.nextSibling && tn.parentNode.nextSibling) {\n\t\t\tconst parentNext = tn.parentNode.nextSibling;\n\t\t\tif (parentNext.nodeType === 1) {  // ELEMENT_NODE\n\t\t\t\tconst pnd = getComputedStyle(parentNext).display;\n\t\t\t\tif (pnd.includes('inline')) {\n\t\t\t\t\tnt = parentNext.innerText;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (parentNext.nodeType === 3) {  // TEXT_NODE\n\t\t\t\tnt = parentNext.textContent;\n\t\t\t}\n\t\t}\n\t\n\t\tconst ks = getKerning(str, dict, isHead, nt, opts.doAssignAttribute);\n\t\tif (ks.length) {\n\t\t\tconst f = createFragment(str, ks, opts);\n\t\t\ttn.parentNode.replaceChild(f, tn);\n\t\t}\n\t}\n\t\n\tfunction isEnd(tn) {\n\t\tconst p = tn.parentNode;\n\t\tif (!(p instanceof HTMLElement)) return [false, false];\n\t\tconst pd = getComputedStyle(p).display;\n\t\tif (!pd.includes('inline')) {  // Block\n\t\t\treturn isSiblingBlock(tn);\n\t\t}\n\t\tif (pd === 'inline-block') {  // Inline block\n\t\t\tif (p.childNodes.length !== 1) {  // The parent has multiple nodes.\n\t\t\t\treturn isSiblingBlock(tn);\n\t\t\t}\n\t\t\tconst pp = p.parentNode;\n\t\t\tif (pp) {\n\t\t\t\tconst ppd = getComputedStyle(pp).display;\n\t\t\t\tif (!ppd.includes('inline')) {\n\t\t\t\t\treturn isSiblingBlock(p, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn [false, false];  // Not inline block\n\t}\n\t\n\tfunction isSiblingBlock(n, greedy = false) {\n\t\treturn [greedy ? isPreviousBlockGreedy(n.previousSibling) : isBlock(n.previousSibling), isBlock(n.nextSibling)];\n\t}\n\t\n\tfunction isBlock(n) {\n\t\tif (n === null) return true;\n\t\tif (!(n instanceof HTMLElement)) return false;\n\t\tif (n.tagName === 'BR') return true;\n\t\treturn !getComputedStyle(n).display.includes('inline');\n\t}\n\t\n\tfunction isPreviousBlockGreedy(n) {\n\t\twhile (true) {\n\t\t\tif (n === null) return true;\n\t\t\tif (n.nodeType === 1) {\n\t\t\t\tif (n.tagName === 'BR') return true;\n\t\t\t\treturn !getComputedStyle(n).display.includes('inline');\n\t\t\t}\n\t\t\tif (n.nodeType === 3) {\n\t\t\t\tif (!n.textContent.trim()) return true;\n\t\t\t}\n\t\t\tn = n.previousSibling;\n\t\t}\n\t}\n\t\n\t\n\t// -----------------------------------------------------------------------------\n\t\n\t\n\tfunction getKerning(str, dict, isHead, nextNodeText, assignAttr) {\n\t\tlet strArray = [...str];\n\t\tconst ret = [];\n\t\n\t\tif (nextNodeText.length) {\n\t\t\tstrArray = strArray.concat([...nextNodeText]);\n\t\t}\n\t\tlet l = 0;\n\t\n\t\tfor (let i = 0; i < strArray.length; i += 1) {\n\t\t\tconst c0 = strArray[i];\n\t\t\tconst c1 = strArray[i + 1];\n\t\n\t\t\tlet a = '';\n\t\t\tif (c0 !== '' && c1 !== '' && dict.has(c0 + c1)) {\n\t\t\t\ta = assignAttr ? 's' : 'letter-spacing:-0.4em;';\n\t\t\t}\n\t\t\tif (i === 0 && isHead && c0 !== '' && dict.has(c0)) {\n\t\t\t\ta += assignAttr ? 'h' : 'margin-left:-0.4em';\n\t\t\t}\n\t\t\tif (a.length) {\n\t\t\t\tif (l) {\n\t\t\t\t\tret.push(l);\n\t\t\t\t\tl = 0;\n\t\t\t\t}\n\t\t\t\tret.push(a);\n\t\t\t} else {\n\t\t\t\tl += 1;\n\t\t\t}\n\t\t}\n\t\tif (ret.length && l) ret.push(l);\n\t\treturn ret;\n\t}\n\t\n\tfunction createFragment(str, ks, opts) {\n\t\tconst strArray = [...str];\n\t\tconst f = document.createDocumentFragment();\n\t\tlet i = 0;\n\t\tfor (const k of ks) {\n\t\t\tif (Number.isInteger(k)) {\n\t\t\t\tconst n = document.createTextNode(strArray.slice(i, i + k).join(''));\n\t\t\t\tf.appendChild(n);\n\t\t\t\ti += k;\n\t\t\t} else {\n\t\t\t\tconst n = document.createElement('span');\n\t\t\t\tn.appendChild(document.createTextNode(strArray.slice(i, i + 1).join('')));\n\t\t\t\tif (k.length <= 2) {\n\t\t\t\t\tsetClass(n, opts.styleKerning, true, k);\n\t\t\t\t} else {\n\t\t\t\t\tn.style = k;\n\t\t\t\t}\n\t\t\t\tf.appendChild(n);\n\t\t\t\ti += 1;\n\t\t\t}\n\t\t}\n\t\treturn f;\n\t}\n\t\n\t\n\t// -----------------------------------------------------------------------------\n\t\n\t\n\tconst dict = new Set();\n\t{\n\t\taddPairs(dict, '、，。．・｜：　', '「『（［｛〈《【〔');\n\t\taddPairs(dict, '」』）］｝〉》】〕', '、，。．・｜：,.');\n\t\taddPairs(dict, '」』）］｝〉》】〕', '「『（［｛〈《【〔');\n\t\taddPairs(dict, '「『（［｛〈《【〔', '「『（［｛〈《【〔');\n\t\taddPairs(dict, '」』）］｝〉》】〕', '」』）］｝〉》】〕');\n\t\taddSolos(dict, '「『（［｛〈《【〔');\n\t\n\t\tfunction addPairs(dict, cs0, cs1) {\n\t\t\tfor (const c0 of cs0) {\n\t\t\t\tfor (const c1 of cs1) {\n\t\t\t\t\tdict.add(c0 + c1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tfunction addSolos(dict, head) {\n\t\t\tfor (const h of head) {\n\t\t\t\tdict.add(h);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tNS.applyKerning         = apply;\n\tNS.applyKerningToString = applyToString;\n\n\t/**\n\t * Common Functions\n\t *\n\t * @author Takuto Yanagida\n\t * @version 2021-11-03\n\t */\n\t\n\tfunction removeHeadWhiteSpaces(str) {\n\t\tconst mzs = str.match(/^[\\n\\r\\t ]*(\\u3000*)/);\n\t\tconst zs = (mzs && 1 < mzs.length) ? mzs[1] : '';\n\t\treturn zs + str.replace(/^\\s+/g, '');  // Trim left\n\t}\n\t\n\tfunction removeTailWhiteSpaces(str) {\n\t\treturn str.replace(/\\s+$/g, '');  // Trim right\n\t}\n\t\n\tfunction removeWhiteSpacesBetweenZenChars(str) {\n\t\t// White space character class excluding \\u3000\n\t\t// [ \\f\\n\\r\\t\\v​\\u00a0​\\u180e\\u2000​-\\u200a​\\u2028\\u2029\\u202f\\u205f​\\ufeff]\n\t\treturn str.replace(/([^\\x01-\\x7E\\xA1-\\xDF]+)([\\t\\n]+|[ \\f\\n\\r\\t\\v\\u00a0\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\ufeff]{2})([^\\x01-\\x7E\\xA1-\\xDF]+)/g, (match, g1, d, g2) => g1 + g2);\n\t}\n\t\n\n})(window['NACSS']['ja']);\n"]}