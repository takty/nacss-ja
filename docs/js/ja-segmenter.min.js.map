{"version":3,"sources":["ja-segmenter.js"],"names":["window","NS","removeSegment","elm","opts","sty","styleSegment","s","Array","from","getElementsByTagName","length","className","hasClass","df","document","createDocumentFragment","c","childNodes","appendChild","parentNode","replaceChild","segmentElement","nodeType","styleDisabled","segmentTextNode","tn","str","textContent","replace","match","g1","d","g2","removeWhiteSpacesBetweenZenChars","ts","ws","getSegment","f","createFragment","IW","split","AW","AI1","PRE_KANJI","PRE_NUM","push","getCharType","createCharTypeArray","fill","i","t0","t1","PAIRS","weightByCharTypes","strA","phrases","ph","phA","phL","bgn","idx0","indexOfArray","idx1","divideByPhrases","concatByPhrases","al","divideByCombinedPhrases","weightByPhrases","CLS_ALL","CLS_WO_KANJI","CHAR_PATTERNS","t","p","test","II","KK","HH","NN","OO","TT","HI","NH","NK","NI","ON","NO","prevCts","nextCts","prevW","nextW","tsL","includes","array","searchElement","fromIndex","j","temp","idx","appendPhrase","isOriginalCharPhrase","isOrig","style","createTextNode","e","createElement","tar","cls","enabled","val","key","substr","startsWith","dataset","classList","add","join","remove","setClass","end","undefined","contains","jaSegmenter","Object","assign","doDisableOnSelecting","removeEventListener","addEventListener","jaApplySegmenter"],"mappings":"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","file":"ja-segmenter.min.js","sourcesContent":["/**\n *\n * Style for Japanese Text - Segmenter (JS)\n *\n * @author Takuto Yanagida\n * @version 2021-11-03\n *\n */\n\n\nwindow['NACSS'] = window['NACSS'] || {};\n\n\n(function (NS) {\n\n\t/**\n\t *\n\t * Segmenter\n\t *\n\t * @author Takuto Yanagida\n\t * @version 2021-11-04\n\t *\n\t */\n\t\n\t\n\tfunction initialize(ts, opts = {}) {\n\t\tif (ts.length === 0) return;\n\t\n\t\topts = Object.assign({\n\t\t\tstyleSegment        : '',\n\t\t\tstyleDisabled       : ':ncNoSegmentation',\n\t\t\tdoDisableOnSelecting: true,\n\t\t}, opts);\n\t\n\t\tfor (const t of ts) {\n\t\t\tsegmentElement(t, opts);\n\t\t\tif (opts.doDisableOnSelecting) {\n\t\t\t\tconst f = function () {\n\t\t\t\t\tremoveSegment(t, opts);\n\t\t\t\t\tt.removeEventListener('selectstart', f);\n\t\t\t\t}\n\t\t\t\tt.addEventListener('selectstart', f);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction removeSegment(elm, opts) {\n\t\tconst sty = opts.styleSegment;\n\t\tfor (const s of Array.from(elm.getElementsByTagName('span'))) {\n\t\t\tif ((sty.length === 0 && s.className === '') || hasClass(s, sty)) {\n\t\t\t\tconst df = document.createDocumentFragment();\n\t\t\t\tfor (const c of Array.from(s.childNodes)) {\n\t\t\t\t\tdf.appendChild(c);\n\t\t\t\t}\n\t\t\t\ts.parentNode.replaceChild(df, s);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction apply(str, opts = {}) {\n\t\topts = Object.assign({\n\t\t\tstyleSegment : '',\n\t\t\tstyleDisabled: ':ncNoSegmentation',\n\t\t}, opts);\n\t\n\t\tconst [ts, ws] = getSegment(str);\n\t\treturn createFragment(str, ts, ws, opts);\n\t}\n\t\n\t\n\t// -------------------------------------------------------------------------\n\t\n\t\n\tfunction segmentElement(elm, opts) {\n\t\tfor (const c of Array.from(elm.childNodes)) {\n\t\t\tif (c.nodeType === 1) {  // ELEMENT_NODE\n\t\t\t\tif (!hasClass(c, opts.styleDisabled)) segmentElement(c, opts);\n\t\t\t} else if (c.nodeType === 3) {  // TEXT_NODE\n\t\t\t\tsegmentTextNode(c, opts);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction segmentTextNode(tn, opts) {\n\t\tlet str = tn.textContent;\n\t\tstr = removeWhiteSpacesBetweenZenChars(str);\n\t\n\t\tconst [ts, ws] = getSegment(str);\n\t\tconst f = createFragment(str, ts, ws, opts);\n\t\ttn.parentNode.replaceChild(f, tn);\n\t}\n\t\n\t\n\t// -----------------------------------------------------------------------------\n\t\n\t\n\tconst IW = 'そうはいうものの,そればかりでなく,ありとあらゆる,いずれにしても,かけがえのない,そうしてみると,そうすることで,そうでないなら,そうではあるが,それにくわえて,それはさておき,どっちにしても,とはいうものの,なぜかというと,にもかかわらず,いいかえると,いずれにしろ,いずれにせよ,いってみれば,おもいきった,しかしながら,じつのところ,じつはいうと,そうしないと,そうではなく,そのためには,それどころか,それにしても,それによって,そればかりか,それはそうと,どちらにせよ,どっちにせよ,いろいろな,このように,さまざまな,さもないと,したがって,そういえば,そうしたら,そうすると,そうすれば,そうなると,そうなれば,そのかわり,それなのに,それゆえに,たくまざる,だとしたら,だとすると,だとすれば,ではあるが,というのは,というのも,というより,なぜならば,やすやすと,ようするに,ああいう,ああした,あたかも,あらゆる,あるいは,いかなる,いつかは,いっぱい,いろんな,いわゆる,おおきな,おかしな,おそらく,おなじく,おまけに,かえって,かくして,かわりに,くわえて,ぐんぐん,けれども,こういう,こうして,このため,しかるに,しばらく,すなわち,そういう,そうした,そのうえ,そのくせ,そのため,そもそも,それから,それから,それでは,それでも,それとも,それなら,それには,たいした,たいそう,たくさん,だけども,たとえば,たやすく,ちいさな,ちなみに,というか,どういう,とうてい,ときどき,ところが,どころか,ところで,となると,となれば,とにかく,とはいえ,ともあれ,とりわけ,ないしは,なかでも,なぜなら,なぜなら,なだたる,なにしろ,ならびに,はじめに,はずべき,はなはだ,ひいては,ひょんな,ふとした,ほかには,ほかにも,めっきり,もしくは,もっとも,あまり,あらぬ,ありし,あんな,いただ,いつか,いつも,いわば,および,かかる,かなり,きたる,きっと,けれど,ことに,こんな,さらに,しかし,しかも,じつは,じゃあ,すぐに,すぐに,すると,そこで,そして,そっと,それで,それに,そんな,だから,だけど,ただし,だって,たまに,つぎに,つまり,ですが,とある,どうか,ときに,とくに,とても,とんだ,どんな,なにせ,なのに,ならば,ほんの,まさか,または,むこう,むしろ,もっと,もっと,もっと,ものの,やはり,ゆえに,ようは,よって,ああ,あの,ある,かつ,かの,けど,こう,この,さて,さる,そう,その,だが,ただ,では,でも,どう,どの,なお,なぜ,のに,また,もし,よく,わが'.split(',');\n\tconst AW = 'けれども,ところで,において,について,かしら,がてら,くらい,ぐらい,けれど,ってば,ながら,などの,なんぞ,ばかり,ものか,ものの,かい,から,かり,きり,こそ,さえ,しか,ずつ,だけ,だの,たり,つつ,では,ても,でも,とも,なぞ,など,なり,にて,には,ので,のに,のみ,ほど,まで,まま,もん,やら,より,か,が,さ,し,ぜ,ぞ,て,で,と,な,に,ね,の,は,ば,へ,も,や,よ,わ,を'.split(',');\n\t\n\tconst AI1       = 'がおこな,のような,があり,がおき,ができ,がでて'.split(',');\n\tconst PRE_KANJI = 'お,ご'.split(',');\n\tconst PRE_NUM   = '第,約'.split(',');\n\t\n\tfunction getSegment(str) {\n\t\tconst ts = createCharTypeArray(str);\n\t\tconst ws = Array(ts.length).fill(0);\n\t\n\t\tweightByCharTypes(ts, ws);\n\t\n\t\tconst strA = Array.from(str);\n\t\tdivideByPhrases(strA, ws, IW);\n\t\tconcatByPhrases(strA, ws, AW);\n\t\n\t\tdivideByCombinedPhrases(strA, ws, AI1, 1);\n\t\tweightByPhrases(strA, ts, ws, PRE_KANJI, CLS_ALL,      'H', -1, 2);\n\t\tweightByPhrases(strA, ts, ws, PRE_NUM,   CLS_WO_KANJI, 'N',  0, 2);\n\t\n\t\treturn [ts, ws];\n\t}\n\t\n\t\n\t// -----------------------------------------------------------------------------\n\t\n\t\n\tconst CLS_WO_KANJI = 'SETIKNVO';\n\tconst CLS_ALL      = 'SETIKHNVO';\n\tconst CLS_ORIG     = 'NVO';\n\t\n\tconst CHAR_PATTERNS = [\n\t\t['S', /[「『（［｛〈《【〔〖〘〚＜“]/u],\n\t\t['E', /[」』）］｝〉》】〕〗〙〛＞”]/u],\n\t\t['T', /[、，。．？！を：・]/u],\n\t\t['I', /[ぁ-んゝ]/u],\n\t\t['K', /[ァ-ヴーｱ-ﾝﾞｰ]/u],\n\t\t['H', /[々〆ヵヶ]|[\\u4E00-\\u9FFF]|[\\u{20000}-\\u{2A6DF}]/u],  // Special Characters, CJK Unified Ideographs, CJK Unified Ideographs Extension B\n\t\t['N', /[0-9０-９]/u],\n\t\t['V', /\\s/u],\n\t];\n\t\n\tfunction createCharTypeArray(str) {\n\t\tconst ts = [];\n\t\tfor (const c of str) {\n\t\t\tts.push(getCharType(c));\n\t\t}\n\t\treturn ts;\n\t}\n\t\n\tfunction getCharType(c) {\n\t\tfor (const [t, p] of CHAR_PATTERNS) {\n\t\t\tif (p.test(c)) return t;\n\t\t}\n\t\treturn 'O';\n\t}\n\t\n\t\n\t// -----------------------------------------------------------------------------\n\t\n\t\n\tconst PAIRS = {\n\t\t'*S': -1, 'S*': 2,\n\t\t'*E': 2,\n\t\t'*T': 99, 'T*': -99,\n\t\t'*V': -1, 'V*': -1,\n\t\t'II': 1, 'KK': 1, 'HH': 1,  'NN': 1, 'OO': 1, 'TT': 1,\n\t\t'HI': 1,\n\t\t'NH': 2, 'NK': 1, 'NI': 1,\n\t\t'ON': 1, 'NO': 1,\n\t};\n\t\n\tfunction weightByCharTypes(ts, ws) {\n\t\tfor (let i = 1; i < ts.length; i += 1) {\n\t\t\tconst t0 = ts[i - 1];\n\t\t\tconst t1 = ts[i];\n\t\t\tws[i] += (PAIRS[t0 + t1] ?? 0) + (PAIRS['*' + t1] ?? 0) + (PAIRS[t0 + '*'] ?? 0);\n\t\t}\n\t}\n\t\n\t\n\t// -----------------------------------------------------------------------------\n\t\n\t\n\tfunction divideByPhrases(strA, ws, phrases) {\n\t\tfor (const ph of phrases) {\n\t\t\tconst phA = Array.from(ph);\n\t\t\tconst phL = phA.length;\n\t\n\t\t\tfor (let bgn = 0;;) {\n\t\t\t\tconst idx0 = indexOfArray(strA, phA, bgn);\n\t\t\t\tif (idx0 === -1) break;\n\t\t\t\tconst idx1 = idx0 + phL;\n\t\n\t\t\t\tws[idx0] -= phL;\n\t\t\t\tfor (let i = 1; i < phL; i += 1) ws[idx0 + i] += phL;\n\t\t\t\tbgn = idx1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction divideByCombinedPhrases(strA, ws, phrases, al) {\n\t\tfor (const ph of phrases) {\n\t\t\tconst phA = Array.from(ph);\n\t\t\tconst phL = phA.length;\n\t\n\t\t\tfor (let bgn = 0;;) {\n\t\t\t\tconst idx0 = indexOfArray(strA, phA, bgn);\n\t\t\t\tif (idx0 === -1) break;\n\t\t\t\tconst idx1 = idx0 + phL;\n\t\n\t\t\t\tws[idx0 + al] -= phL - al;\n\t\t\t\tfor (let i = 1; i < phL - al; i += 1) ws[idx0 + al + i] += phL - al;\n\t\t\t\tbgn = idx1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction concatByPhrases(strA, ws, phrases) {\n\t\tfor (const ph of phrases) {\n\t\t\tconst phA = Array.from(ph);\n\t\t\tconst phL = phA.length;\n\t\n\t\t\tfor (let bgn = 0; ;) {\n\t\t\t\tconst idx0 = indexOfArray(strA, phA, bgn);\n\t\t\t\tif (idx0 === -1) break;\n\t\t\t\tconst idx1 = idx0 + phL;\n\t\n\t\t\t\tws[idx0] += phL;\n\t\t\t\tfor (let i = 1; i < phL; i += 1) ws[idx0 + i] += phL;\n\t\t\t\tbgn = idx1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction weightByPhrases(strA, ts, ws, phrases, prevCts, nextCts, prevW, nextW) {\n\t\tconst tsL = ts.length;\n\t\n\t\tfor (const ph of phrases) {\n\t\t\tconst phA = Array.from(ph);\n\t\t\tconst phL = phA.length;\n\t\n\t\t\tfor (let bgn = 0; ;) {\n\t\t\t\tconst idx0 = indexOfArray(strA, phA, bgn);\n\t\t\t\tif (idx0 === -1) break;\n\t\t\t\tconst idx1 = idx0 + phL;\n\t\n\t\t\t\tif (\n\t\t\t\t\t(idx0 === 0   || (idx0 !== 0 && prevCts.includes(ts[idx0 - 1]))) &&\n\t\t\t\t\t(idx1 === tsL || (idx1 < tsL && nextCts.includes(ts[idx1])))\n\t\t\t\t) {\n\t\t\t\t\tws[idx0] += prevW;\n\t\t\t\t\tif (idx1 < ws.length) ws[idx1] += nextW;\n\t\t\t\t\tfor (let i = 1; i < phL; i += 1) ws[idx0 + i] += phL;\n\t\t\t\t}\n\t\t\t\tbgn = idx1;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction indexOfArray(array, searchElement, fromIndex = 0) {\n\t\tif (array === null || array === undefined) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (array.length === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tfor (let i = fromIndex; i < array.length - searchElement.length + 1; i += 1) {\n\t\t\tlet match = true;\n\t\n\t\t\tfor (let j = 0; j < searchElement.length; j += 1) {\n\t\t\t\tif (array[i + j] !== searchElement[j]) {\n\t\t\t\t\tmatch = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (match) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n\t\n\t\n\t// -----------------------------------------------------------------------------\n\t\n\t\n\tfunction createFragment(str, ts, ws, opts) {\n\t\tconst df = document.createDocumentFragment();\n\t\tlet temp = '';\n\t\tlet bgn  = 0;\n\t\n\t\tlet idx = 0;\n\t\tfor (const c of str) {\n\t\t\tif (ws[idx] <= 0) {\n\t\t\t\tconst isOrig = isOriginalCharPhrase(ts, bgn, idx);\n\t\t\t\tappendPhrase(df, temp, isOrig, opts.styleSegment);\n\t\t\t\ttemp = '';\n\t\t\t\tbgn  = idx;\n\t\t\t}\n\t\t\ttemp += c;\n\t\t\tidx  += 1;\n\t\t}\n\t\tif (temp.length) {\n\t\t\tconst isOrig = isOriginalCharPhrase(ts, bgn, ts.length);\n\t\t\tappendPhrase(df, temp, isOrig, opts.styleSegment);\n\t\t}\n\t\treturn df;\n\t}\n\t\n\tfunction appendPhrase(df, str, isOrig, style) {\n\t\tif (isOrig) {\n\t\t\tdf.appendChild(document.createTextNode(str));\n\t\t} else {\n\t\t\tconst e = document.createElement('span');\n\t\t\te.appendChild(document.createTextNode(str));\n\t\t\tif (style.length) setClass(e, style);\n\t\t\tdf.appendChild(e);\n\t\t}\n\t}\n\t\n\tfunction isOriginalCharPhrase(ts, bgn, end) {\n\t\tfor (let i = bgn; i < end; i += 1) {\n\t\t\tconst t = ts[i];\n\t\t\tif (!CLS_ORIG.includes(t)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\t\n\tNS.jaSegmenter      = initialize;\n\tNS.jaApplySegmenter = apply;\n\n\t/**\n\t *\n\t * Utilities\n\t *\n\t * @author Takuto Yanagida\n\t * @version 2021-11-03\n\t *\n\t */\n\t\n\t\n\tfunction hasClass(tar, cls) {\n\t\tconst key = cls.substr(1);\n\t\tif (cls.startsWith(':')) {\n\t\t\treturn tar.dataset[key] !== undefined;\n\t\t} else {\n\t\t\treturn tar.classList.contains(key);\n\t\t}\n\t}\n\t\n\tfunction setClass(tar, cls, enabled = true, val = '') {\n\t\tconst key = cls.substr(1);\n\t\tif (cls.startsWith(':')) {\n\t\t\tif (enabled) {\n\t\t\t\ttar.dataset[key] = val;\n\t\t\t} else {\n\t\t\t\tdelete tar.dataset[key];\n\t\t\t}\n\t\t} else {\n\t\t\tif (enabled) {\n\t\t\t\ttar.classList.add([key, val].join('-'));\n\t\t\t} else {\n\t\t\t\ttar.classList.remove([key, val].join('-'));\n\t\t\t}\n\t\t}\n\t}\n\t\n\t/**\n\t *\n\t * Common Functions\n\t *\n\t * @author Takuto Yanagida\n\t * @version 2021-11-03\n\t *\n\t */\n\t\n\t\n\tfunction removeHeadWhiteSpaces(str) {\n\t\tconst mzs = str.match(/^[\\n\\r\\t ]*(\\u3000*)/);\n\t\tconst zs = (mzs && 1 < mzs.length) ? mzs[1] : '';\n\t\treturn zs + str.replace(/^\\s+/g, '');  // Trim left\n\t}\n\t\n\tfunction removeTailWhiteSpaces(str) {\n\t\treturn str.replace(/\\s+$/g, '');  // Trim right\n\t}\n\t\n\tfunction removeWhiteSpacesBetweenZenChars(str) {\n\t\t// White space character class excluding \\u3000\n\t\t// [ \\f\\n\\r\\t\\v​\\u00a0​\\u180e\\u2000​-\\u200a​\\u2028\\u2029\\u202f\\u205f​\\ufeff]\n\t\treturn str.replace(/([^\\x01-\\x7E\\xA1-\\xDF]+)([\\t\\n]+|[ \\f\\n\\r\\t\\v\\u00a0\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\ufeff]{2})([^\\x01-\\x7E\\xA1-\\xDF]+)/g, (match, g1, d, g2) => g1 + g2);\n\t}\n\t\n\n})(window['NACSS']);\n"]}