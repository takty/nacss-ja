{"version":3,"sources":["ja.js"],"names":["window","NS","hasClass","tar","cls","key","substr","startsWith","undefined","dataset","classList","contains","setClass","enabled","val","c","join","add","remove","removeWhiteSpacesBetweenZenChars","str","replace","match","g1","d","g2","removeKerning","elm","opts","s","Array","from","getElementsByTagName","styleKerning","df","document","createDocumentFragment","childNodes","appendChild","parentNode","replaceChild","kernElement","dict","nodeType","styleDisabled","kernTextNode","tn","isHead","isTail","p","HTMLElement","pd","getComputedStyle","display","includes","isSiblingBlock","length","pp","isEnd","textContent","mzs","removeHeadWhiteSpaces","removeTailWhiteSpaces","nt","nextSibling","innerText","parentNext","ks","getKerning","doAssignAttribute","f","createFragment","n","greedy","isPreviousBlockGreedy","previousSibling","isBlock","tagName","trim","nextNodeText","assignAttr","strArray","ret","concat","l","i","c0","c1","a","has","push","k","Number","isInteger","createTextNode","slice","createElement","style","Set","addPairs","cs0","cs1","head","h","addSolos","jaKerning","ts","Object","assign","doDisableOnSelecting","t","removeEventListener","addEventListener","jaApplyKerning","removeSegment","sty","styleSegment","className","sortProperNouns","pns","map","e","sort","b","segmentElement","segmentTextNode","ws","getSegment","properNouns","IW","split","AW","AI1","PRE_KANJI","PRE_NUM","getCharType","createCharTypeArray","fill","t0","t1","PAIRS","weightByCharTypes","strA","weightByPhrases","weightByPhraseAndType","CLS_ALL","CLS_WO_KANJI","CHAR_PATTERNS","test","II","KK","HH","NN","OO","TT","HI","NH","NK","NI","ON","NO","phrases","factor","offset","ph","phA","phL","bgn","idx0","indexOfArray","idx1","prevCts","nextCts","prevW","nextW","tsL","array","searchElement","fromIndex","j","temp","idx","appendPhrase","isOriginalCharPhrase","isOrig","end","jaSegmenter","jaApplySegmenter"],"mappings":"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","file":"ja.min.js","sourcesContent":["/**\n *\n * Japanese Text\n *\n * @author Takuto Yanagida\n * @version 2021-11-11\n *\n */\n\n\nwindow['NACSS'] = window['NACSS'] || {};\n\n\n(function (NS) {\n\n\t(function () {\n\t\t/**\n\t\t *\n\t\t * Kerning\n\t\t *\n\t\t * @author Takuto Yanagida\n\t\t * @version 2021-11-03\n\t\t *\n\t\t */\n\t\t\n\t\t\n\t\tfunction initialize(ts, opts = {}) {\n\t\t\tif (ts.length === 0) return;\n\t\t\n\t\t\topts = Object.assign({\n\t\t\t\tstyleKerning        : ':ncKern',\n\t\t\t\tstyleDisabled       : ':ncNoKerning',\n\t\t\t\tdoAssignAttribute   : true,\n\t\t\t\tdoDisableOnSelecting: true,\n\t\t\t}, opts);\n\t\t\n\t\t\tfor (const t of ts) {\n\t\t\t\tkernElement(t, dict, opts);\n\t\t\t\tif (opts.doAssignAttribute && opts.doDisableOnSelecting) {\n\t\t\t\t\tconst f = function () {\n\t\t\t\t\t\tremoveKerning(t, opts);\n\t\t\t\t\t\tt.removeEventListener('selectstart', f);\n\t\t\t\t\t}\n\t\t\t\t\tt.addEventListener('selectstart', f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction removeKerning(elm, opts) {\n\t\t\tfor (const s of Array.from(elm.getElementsByTagName('span'))) {\n\t\t\t\tif (hasClass(s, opts.styleKerning)) {\n\t\t\t\t\tconst df = document.createDocumentFragment();\n\t\t\t\t\tfor (const c of Array.from(s.childNodes)) {\n\t\t\t\t\t\tdf.appendChild(c);\n\t\t\t\t\t}\n\t\t\t\t\ts.parentNode.replaceChild(df, s);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction apply(str, opts = {}) {\n\t\t\topts = Object.assign({\n\t\t\t\tstyleKerning     : ':ncKern',\n\t\t\t\tstyleDisabled    : ':ncNoKerning',\n\t\t\t\tdoAssignAttribute: true,\n\t\t\t}, opts);\n\t\t\n\t\t\tconst ks = getKerning(str, dict, false, opts.doAssignAttribute);\n\t\t\tif (ks.length) {\n\t\t\t\treturn createFragment(str, ks, opts);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\t\n\t\t// -----------------------------------------------------------------------------\n\t\t\n\t\t\n\t\tfunction kernElement(elm, dict, opts) {\n\t\t\tfor (const c of Array.from(elm.childNodes)) {\n\t\t\t\tif (c.nodeType === 1) {  // ELEMENT_NODE\n\t\t\t\t\tif (!hasClass(c, opts.styleDisabled)) kernElement(c, dict, opts);\n\t\t\t\t} else if (c.nodeType === 3) {  // TEXT_NODE\n\t\t\t\t\tkernTextNode(c, dict, opts);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction kernTextNode(tn, dict, opts) {\n\t\t\tconst [isHead, isTail] = isEnd(tn);\n\t\t\n\t\t\tlet str = tn.textContent;\n\t\t\tif (isHead) str = removeHeadWhiteSpaces(str);\n\t\t\tif (isTail) str = removeTailWhiteSpaces(str);\n\t\t\tstr = removeWhiteSpacesBetweenZenChars(str);\n\t\t\n\t\t\tlet nt = '';\n\t\t\tif (tn.nextSibling && tn.nextSibling.nodeType === 1 && getComputedStyle(tn.nextSibling).display === 'inline') {\n\t\t\t\tnt = tn.nextSibling.innerText;\n\t\t\t}\n\t\t\tif (!tn.nextSibling && tn.parentNode.nextSibling) {\n\t\t\t\tconst parentNext = tn.parentNode.nextSibling;\n\t\t\t\tif (parentNext.nodeType === 1) {  // ELEMENT_NODE\n\t\t\t\t\tconst pnd = getComputedStyle(parentNext).display;\n\t\t\t\t\tif (pnd.includes('inline')) {\n\t\t\t\t\t\tnt = parentNext.innerText;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (parentNext.nodeType === 3) {  // TEXT_NODE\n\t\t\t\t\tnt = parentNext.textContent;\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\tconst ks = getKerning(str, dict, isHead, nt, opts.doAssignAttribute);\n\t\t\tif (ks.length) {\n\t\t\t\tconst f = createFragment(str, ks, opts);\n\t\t\t\ttn.parentNode.replaceChild(f, tn);\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction isEnd(tn) {\n\t\t\tconst p = tn.parentNode;\n\t\t\tif (!(p instanceof HTMLElement)) return [false, false];\n\t\t\tconst pd = getComputedStyle(p).display;\n\t\t\tif (!pd.includes('inline')) {  // Block\n\t\t\t\treturn isSiblingBlock(tn);\n\t\t\t}\n\t\t\tif (pd === 'inline-block') {  // Inline block\n\t\t\t\tif (p.childNodes.length !== 1) {  // The parent has multiple nodes.\n\t\t\t\t\treturn isSiblingBlock(tn);\n\t\t\t\t}\n\t\t\t\tconst pp = p.parentNode;\n\t\t\t\tif (pp) {\n\t\t\t\t\tconst ppd = getComputedStyle(pp).display;\n\t\t\t\t\tif (!ppd.includes('inline')) {\n\t\t\t\t\t\treturn isSiblingBlock(p, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [false, false];  // Not inline block\n\t\t}\n\t\t\n\t\tfunction isSiblingBlock(n, greedy = false) {\n\t\t\treturn [greedy ? isPreviousBlockGreedy(n.previousSibling) : isBlock(n.previousSibling), isBlock(n.nextSibling)];\n\t\t}\n\t\t\n\t\tfunction isBlock(n) {\n\t\t\tif (n === null) return true;\n\t\t\tif (!(n instanceof HTMLElement)) return false;\n\t\t\tif (n.tagName === 'BR') return true;\n\t\t\treturn !getComputedStyle(n).display.includes('inline');\n\t\t}\n\t\t\n\t\tfunction isPreviousBlockGreedy(n) {\n\t\t\twhile (true) {\n\t\t\t\tif (n === null) return true;\n\t\t\t\tif (n.nodeType === 1) {\n\t\t\t\t\tif (n.tagName === 'BR') return true;\n\t\t\t\t\treturn !getComputedStyle(n).display.includes('inline');\n\t\t\t\t}\n\t\t\t\tif (n.nodeType === 3) {\n\t\t\t\t\tif (!n.textContent.trim()) return true;\n\t\t\t\t}\n\t\t\t\tn = n.previousSibling;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t// -----------------------------------------------------------------------------\n\t\t\n\t\t\n\t\tfunction getKerning(str, dict, isHead, nextNodeText, assignAttr) {\n\t\t\tlet strArray = Array.from(str);\n\t\t\tconst ret = [];\n\t\t\n\t\t\tif (nextNodeText.length) {\n\t\t\t\tstrArray = strArray.concat(Array.from(nextNodeText));\n\t\t\t}\n\t\t\tlet l = 0;\n\t\t\n\t\t\tfor (let i = 0; i < strArray.length; i += 1) {\n\t\t\t\tconst c0 = strArray[i];\n\t\t\t\tconst c1 = strArray[i + 1];\n\t\t\n\t\t\t\tlet a = '';\n\t\t\t\tif (c0 !== '' && c1 !== '' && dict.has(c0 + c1)) {\n\t\t\t\t\ta = assignAttr ? 's' : 'letter-spacing:-0.4em;';\n\t\t\t\t}\n\t\t\t\tif (i === 0 && isHead && c0 !== '' && dict.has(c0)) {\n\t\t\t\t\ta += assignAttr ? 'h' : 'margin-left:-0.4em';\n\t\t\t\t}\n\t\t\t\tif (a.length) {\n\t\t\t\t\tif (l) {\n\t\t\t\t\t\tret.push(l);\n\t\t\t\t\t\tl = 0;\n\t\t\t\t\t}\n\t\t\t\t\tret.push(a);\n\t\t\t\t} else {\n\t\t\t\t\tl += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (ret.length && l) ret.push(l);\n\t\t\treturn ret;\n\t\t}\n\t\t\n\t\tfunction createFragment(str, ks, opts) {\n\t\t\tconst strArray = Array.from(str);\n\t\t\tconst f = document.createDocumentFragment();\n\t\t\tlet i = 0;\n\t\t\tfor (const k of ks) {\n\t\t\t\tif (Number.isInteger(k)) {\n\t\t\t\t\tconst n = document.createTextNode(strArray.slice(i, i + k).join(''));\n\t\t\t\t\tf.appendChild(n);\n\t\t\t\t\ti += k;\n\t\t\t\t} else {\n\t\t\t\t\tconst n = document.createElement('span');\n\t\t\t\t\tn.appendChild(document.createTextNode(strArray.slice(i, i + 1).join('')));\n\t\t\t\t\tif (k.length <= 2) {\n\t\t\t\t\t\tsetClass(n, opts.styleKerning, true, k);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn.style = k;\n\t\t\t\t\t}\n\t\t\t\t\tf.appendChild(n);\n\t\t\t\t\ti += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn f;\n\t\t}\n\t\t\n\t\t\n\t\t// -----------------------------------------------------------------------------\n\t\t\n\t\t\n\t\tconst dict = new Set();\n\t\t{\n\t\t\taddPairs(dict, '、，。．・｜：　', '「『（［｛〈《【〔');\n\t\t\taddPairs(dict, '」』）］｝〉》】〕', '、，。．・｜：,.');\n\t\t\taddPairs(dict, '」』）］｝〉》】〕', '「『（［｛〈《【〔');\n\t\t\taddPairs(dict, '「『（［｛〈《【〔', '「『（［｛〈《【〔');\n\t\t\taddPairs(dict, '」』）］｝〉》】〕', '」』）］｝〉》】〕');\n\t\t\taddSolos(dict, '「『（［｛〈《【〔');\n\t\t\n\t\t\tfunction addPairs(dict, cs0, cs1) {\n\t\t\t\tfor (const c0 of cs0) {\n\t\t\t\t\tfor (const c1 of cs1) {\n\t\t\t\t\t\tdict.add(c0 + c1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\tfunction addSolos(dict, head) {\n\t\t\t\tfor (const h of head) {\n\t\t\t\t\tdict.add(h);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tNS.jaKerning      = initialize;\n\t\tNS.jaApplyKerning = apply;\n\t})();\n\n\t(function () {\n\t\t/**\n\t\t *\n\t\t * Segmenter\n\t\t *\n\t\t * @author Takuto Yanagida\n\t\t * @version 2021-11-04\n\t\t *\n\t\t */\n\t\t\n\t\t\n\t\tfunction initialize(ts, opts = {}) {\n\t\t\tif (ts.length === 0) return;\n\t\t\n\t\t\topts = Object.assign({\n\t\t\t\tstyleSegment        : '',\n\t\t\t\tstyleDisabled       : ':ncNoSegmentation',\n\t\t\t\tdoDisableOnSelecting: true,\n\t\t\t\tproperNouns         : [],\n\t\t\t}, opts);\n\t\t\tsortProperNouns(opts);\n\t\t\n\t\t\tfor (const t of ts) {\n\t\t\t\tsegmentElement(t, opts);\n\t\t\t\tif (opts.doDisableOnSelecting) {\n\t\t\t\t\tconst f = function () {\n\t\t\t\t\t\tremoveSegment(t, opts);\n\t\t\t\t\t\tt.removeEventListener('selectstart', f);\n\t\t\t\t\t}\n\t\t\t\t\tt.addEventListener('selectstart', f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction removeSegment(elm, opts) {\n\t\t\tconst sty = opts.styleSegment;\n\t\t\tfor (const s of Array.from(elm.getElementsByTagName('span'))) {\n\t\t\t\tif ((sty.length === 0 && s.className === '') || hasClass(s, sty)) {\n\t\t\t\t\tconst df = document.createDocumentFragment();\n\t\t\t\t\tfor (const c of Array.from(s.childNodes)) {\n\t\t\t\t\t\tdf.appendChild(c);\n\t\t\t\t\t}\n\t\t\t\t\ts.parentNode.replaceChild(df, s);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction apply(str, opts = {}) {\n\t\t\topts = Object.assign({\n\t\t\t\tstyleSegment : '',\n\t\t\t\tstyleDisabled: ':ncNoSegmentation',\n\t\t\t\tproperNouns  : [],\n\t\t\t}, opts);\n\t\t\tsortProperNouns(opts);\n\t\t\n\t\t\tconst [ts, ws] = getSegment(str, opts.properNouns);\n\t\t\treturn createFragment(str, ts, ws, opts);\n\t\t}\n\t\t\n\t\tfunction sortProperNouns(opts) {\n\t\t\tconst pns = opts['properNouns'].map(e => Array.from(e));\n\t\t\tpns.sort((a, b) => {\n\t\t\t\treturn b.length - a.length;\n\t\t\t});\n\t\t\topts['properNouns'] = pns;\n\t\t}\n\t\t\n\t\t\n\t\t// -------------------------------------------------------------------------\n\t\t\n\t\t\n\t\tfunction segmentElement(elm, opts) {\n\t\t\tfor (const c of Array.from(elm.childNodes)) {\n\t\t\t\tif (c.nodeType === 1) {  // ELEMENT_NODE\n\t\t\t\t\tif (!hasClass(c, opts.styleDisabled)) segmentElement(c, opts);\n\t\t\t\t} else if (c.nodeType === 3) {  // TEXT_NODE\n\t\t\t\t\tsegmentTextNode(c, opts);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction segmentTextNode(tn, opts) {\n\t\t\tlet str = tn.textContent;\n\t\t\tstr = removeWhiteSpacesBetweenZenChars(str);\n\t\t\n\t\t\tconst [ts, ws] = getSegment(str, opts.properNouns);\n\t\t\tconst f = createFragment(str, ts, ws, opts);\n\t\t\ttn.parentNode.replaceChild(f, tn);\n\t\t}\n\t\t\n\t\t\n\t\t// -----------------------------------------------------------------------------\n\t\t\n\t\t\n\t\tconst IW = 'そうはいうものの,そればかりでなく,ありとあらゆる,いずれにしても,かけがえのない,そうしてみると,そうすることで,そうでないなら,そうではあるが,それにくわえて,それはさておき,どっちにしても,とはいうものの,なぜかというと,にもかかわらず,いいかえると,いずれにしろ,いずれにせよ,いってみれば,おもいきった,しかしながら,じつのところ,じつはいうと,そうしないと,そうではなく,そのためには,それどころか,それにしても,それによって,そればかりか,それはそうと,どちらにせよ,どっちにせよ,いろいろな,このように,さまざまな,さもないと,したがって,そういえば,そうしたら,そうすると,そうすれば,そうなると,そうなれば,そのかわり,それなのに,それゆえに,たくまざる,だとしたら,だとすると,だとすれば,ではあるが,というのは,というのも,というより,なぜならば,やすやすと,ようするに,ああいう,ああした,あたかも,あらゆる,あるいは,いかなる,いつかは,いっぱい,いろんな,いわゆる,おおきな,おかしな,おそらく,おなじく,おまけに,かえって,かくして,かわりに,くわえて,ぐんぐん,けれども,こういう,こうして,このため,しかるに,しばらく,すなわち,そういう,そうした,そのうえ,そのくせ,そのため,そもそも,それから,それから,それでは,それでも,それとも,それなら,それには,たいした,たいそう,たくさん,だけども,たとえば,たやすく,ちいさな,ちなみに,というか,どういう,とうてい,ときどき,ところが,どころか,ところで,となると,となれば,とにかく,とはいえ,ともあれ,とりわけ,ないしは,なかでも,なぜなら,なぜなら,なだたる,なにしろ,ならびに,はじめに,はずべき,はなはだ,ひいては,ひょんな,ふとした,ほかには,ほかにも,めっきり,もしくは,もっとも,あまり,あらぬ,ありし,あんな,いただ,いつか,いつも,いわば,および,かかる,かなり,きたる,きっと,けれど,ことに,こんな,さらに,しかし,しかも,じつは,じゃあ,すぐに,すぐに,すると,そこで,そして,そっと,それで,それに,そんな,だから,だけど,ただし,だって,たまに,つぎに,つまり,ですが,とある,どうか,ときに,とくに,とても,とんだ,どんな,なにせ,なのに,ならば,ほんの,まさか,または,むこう,むしろ,もっと,もっと,もっと,ものの,やはり,ゆえに,ようは,よって,ああ,あの,ある,かつ,かの,けど,こう,この,さて,さる,そう,その,だが,ただ,では,でも,どう,どの,なお,なぜ,のに,また,もし,よく,わが'.split(',');\n\t\tconst AW = 'けれども,ところで,において,について,かしら,がてら,くらい,ぐらい,けれど,ってば,ながら,などの,なんぞ,ばかり,ものか,ものの,かい,から,かり,きり,こそ,さえ,しか,ずつ,だけ,だの,たり,つつ,では,ても,でも,とも,なぞ,など,なり,にて,には,ので,のに,のみ,ほど,まで,まま,もん,やら,より,か,が,さ,し,ぜ,ぞ,て,で,と,な,に,ね,の,は,ば,へ,も,や,よ,わ,を'.split(',');\n\t\t\n\t\tconst AI1       = 'がおこな,のような,があり,がおき,ができ,がでて'.split(',');\n\t\tconst PRE_KANJI = 'お,ご'.split(',');\n\t\tconst PRE_NUM   = '第,約'.split(',');\n\t\t\n\t\tfunction getSegment(str, properNouns) {\n\t\t\tconst ts = createCharTypeArray(str);\n\t\t\tconst ws = Array(ts.length).fill(0);\n\t\t\n\t\t\tweightByCharTypes(ts, ws);\n\t\t\n\t\t\tconst strA = Array.from(str);\n\t\t\tif (properNouns.length) weightByPhrases(strA, ws, properNouns, -1);  // Divide\n\t\t\tweightByPhrases(strA, ws, IW, -1);  // Divide\n\t\t\tweightByPhrases(strA, ws, AW, 1);  // Concat\n\t\t\n\t\t\tweightByPhrases(strA, ws, AI1, -1, 1);  // Divide with offset\n\t\t\tweightByPhraseAndType(strA, ts, ws, PRE_KANJI, CLS_ALL,      'H', -1, 2);\n\t\t\tweightByPhraseAndType(strA, ts, ws, PRE_NUM,   CLS_WO_KANJI, 'N',  0, 2);\n\t\t\n\t\t\treturn [ts, ws];\n\t\t}\n\t\t\n\t\t\n\t\t// -----------------------------------------------------------------------------\n\t\t\n\t\t\n\t\tconst CLS_WO_KANJI = 'SETIKNVO';\n\t\tconst CLS_ALL      = 'SETIKHNVO';\n\t\tconst CLS_ORIG     = 'NVO';\n\t\t\n\t\tconst CHAR_PATTERNS = [\n\t\t\t['S', /[「『（［｛〈《【〔〖〘〚＜“]/u],\n\t\t\t['E', /[」』）］｝〉》】〕〗〙〛＞”]/u],\n\t\t\t['T', /[、，。．？！を：・]/u],\n\t\t\t['I', /[ぁ-んゝ]/u],\n\t\t\t['K', /[ァ-ヴーｱ-ﾝﾞｰ]/u],\n\t\t\t['H', /[々〆ヵヶ]|[\\u4E00-\\u9FFF]|[\\u{20000}-\\u{2A6DF}]/u],  // Special Characters, CJK Unified Ideographs, CJK Unified Ideographs Extension B\n\t\t\t['N', /[0-9０-９]/u],\n\t\t\t['V', /\\s/u],\n\t\t];\n\t\t\n\t\tfunction createCharTypeArray(str) {\n\t\t\tconst ts = [];\n\t\t\tfor (const c of str) {\n\t\t\t\tts.push(getCharType(c));\n\t\t\t}\n\t\t\treturn ts;\n\t\t}\n\t\t\n\t\tfunction getCharType(c) {\n\t\t\tfor (const [t, p] of CHAR_PATTERNS) {\n\t\t\t\tif (p.test(c)) return t;\n\t\t\t}\n\t\t\treturn 'O';\n\t\t}\n\t\t\n\t\t\n\t\t// -----------------------------------------------------------------------------\n\t\t\n\t\t\n\t\tconst PAIRS = {\n\t\t\t'*S': -1, 'S*': 2,\n\t\t\t'*E': 2,\n\t\t\t'*T': 99, 'T*': -99,\n\t\t\t'*V': -1, 'V*': -1,\n\t\t\t'II': 1, 'KK': 1, 'HH': 1,  'NN': 1, 'OO': 1, 'TT': 1,\n\t\t\t'HI': 1,\n\t\t\t'NH': 2, 'NK': 1, 'NI': 1,\n\t\t\t'ON': 1, 'NO': 1,\n\t\t};\n\t\t\n\t\tfunction weightByCharTypes(ts, ws) {\n\t\t\tfor (let i = 1; i < ts.length; i += 1) {\n\t\t\t\tconst t0 = ts[i - 1];\n\t\t\t\tconst t1 = ts[i];\n\t\t\t\tws[i] += (PAIRS[t0 + t1] ?? 0) + (PAIRS['*' + t1] ?? 0) + (PAIRS[t0 + '*'] ?? 0);\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t// -----------------------------------------------------------------------------\n\t\t\n\t\t\n\t\tfunction divideByPhrases(strA, ws, phrases) {\n\t\t\tfor (const ph of phrases) {\n\t\t\t\tconst phA = Array.from(ph);\n\t\t\t\tconst phL = phA.length;\n\t\t\n\t\t\t\tfor (let bgn = 0;;) {\n\t\t\t\t\tconst idx0 = indexOfArray(strA, phA, bgn);\n\t\t\t\t\tif (idx0 === -1) break;\n\t\t\t\t\tconst idx1 = idx0 + phL;\n\t\t\n\t\t\t\t\tws[idx0] -= phL;\n\t\t\t\t\tfor (let i = 1; i < phL; i += 1) ws[idx0 + i] += phL;\n\t\t\t\t\tbgn = idx1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction divideByCombinedPhrases(strA, ws, phrases, al) {\n\t\t\tfor (const ph of phrases) {\n\t\t\t\tconst phA = Array.from(ph);\n\t\t\t\tconst phL = phA.length;\n\t\t\n\t\t\t\tfor (let bgn = 0;;) {\n\t\t\t\t\tconst idx0 = indexOfArray(strA, phA, bgn);\n\t\t\t\t\tif (idx0 === -1) break;\n\t\t\t\t\tconst idx1 = idx0 + phL;\n\t\t\n\t\t\t\t\tws[idx0 + al] -= phL - al;\n\t\t\t\t\tfor (let i = 1; i < phL - al; i += 1) ws[idx0 + al + i] += phL - al;\n\t\t\t\t\tbgn = idx1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction concatByPhrases(strA, ws, phrases) {\n\t\t\tfor (const ph of phrases) {\n\t\t\t\tconst phA = Array.from(ph);\n\t\t\t\tconst phL = phA.length;\n\t\t\n\t\t\t\tfor (let bgn = 0; ;) {\n\t\t\t\t\tconst idx0 = indexOfArray(strA, phA, bgn);\n\t\t\t\t\tif (idx0 === -1) break;\n\t\t\t\t\tconst idx1 = idx0 + phL;\n\t\t\n\t\t\t\t\tws[idx0] += phL;\n\t\t\t\t\tfor (let i = 1; i < phL; i += 1) ws[idx0 + i] += phL;\n\t\t\t\t\tbgn = idx1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction weightByPhrases(strA, ws, phrases, factor, offset = 0) {\n\t\t\tfor (const ph of phrases) {\n\t\t\t\tconst phA = Array.from(ph);\n\t\t\t\tconst phL = phA.length;\n\t\t\n\t\t\t\tfor (let bgn = 0;;) {\n\t\t\t\t\tconst idx0 = indexOfArray(strA, phA, bgn);\n\t\t\t\t\tif (idx0 === -1) break;\n\t\t\t\t\tconst idx1 = idx0 + phL;\n\t\t\n\t\t\t\t\tws[idx0 + offset] += (phL - offset) * factor;\n\t\t\t\t\tfor (let i = 1; i < phL - offset; i += 1) {\n\t\t\t\t\t\tws[idx0 + offset + i] += (phL - offset);\n\t\t\t\t\t}\n\t\t\t\t\tbgn = idx1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction weightByPhraseAndType(strA, ts, ws, phrases, prevCts, nextCts, prevW, nextW) {\n\t\t\tconst tsL = ts.length;\n\t\t\n\t\t\tfor (const ph of phrases) {\n\t\t\t\tconst phA = Array.from(ph);\n\t\t\t\tconst phL = phA.length;\n\t\t\n\t\t\t\tfor (let bgn = 0; ;) {\n\t\t\t\t\tconst idx0 = indexOfArray(strA, phA, bgn);\n\t\t\t\t\tif (idx0 === -1) break;\n\t\t\t\t\tconst idx1 = idx0 + phL;\n\t\t\n\t\t\t\t\tif (\n\t\t\t\t\t\t(idx0 === 0   || (idx0 !== 0 && prevCts.includes(ts[idx0 - 1]))) &&\n\t\t\t\t\t\t(idx1 === tsL || (idx1 < tsL && nextCts.includes(ts[idx1])))\n\t\t\t\t\t) {\n\t\t\t\t\t\tws[idx0] += prevW;\n\t\t\t\t\t\tif (idx1 < ws.length) ws[idx1] += nextW;\n\t\t\t\t\t\tfor (let i = 1; i < phL; i += 1) ws[idx0 + i] += phL;\n\t\t\t\t\t}\n\t\t\t\t\tbgn = idx1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction indexOfArray(array, searchElement, fromIndex = 0) {\n\t\t\tif (array === null || array === undefined) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (array.length === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tfor (let i = fromIndex; i < array.length - searchElement.length + 1; i += 1) {\n\t\t\t\tlet match = true;\n\t\t\n\t\t\t\tfor (let j = 0; j < searchElement.length; j += 1) {\n\t\t\t\t\tif (array[i + j] !== searchElement[j]) {\n\t\t\t\t\t\tmatch = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (match) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\t\t\n\t\t\n\t\t// -----------------------------------------------------------------------------\n\t\t\n\t\t\n\t\tfunction createFragment(str, ts, ws, opts) {\n\t\t\tconst df = document.createDocumentFragment();\n\t\t\tlet temp = '';\n\t\t\tlet bgn  = 0;\n\t\t\n\t\t\tlet idx = 0;\n\t\t\tfor (const c of str) {\n\t\t\t\tif (ws[idx] <= 0) {\n\t\t\t\t\tconst isOrig = isOriginalCharPhrase(ts, bgn, idx);\n\t\t\t\t\tappendPhrase(df, temp, isOrig, opts.styleSegment);\n\t\t\t\t\ttemp = '';\n\t\t\t\t\tbgn  = idx;\n\t\t\t\t}\n\t\t\t\ttemp += c;\n\t\t\t\tidx  += 1;\n\t\t\t}\n\t\t\tif (temp.length) {\n\t\t\t\tconst isOrig = isOriginalCharPhrase(ts, bgn, ts.length);\n\t\t\t\tappendPhrase(df, temp, isOrig, opts.styleSegment);\n\t\t\t}\n\t\t\treturn df;\n\t\t}\n\t\t\n\t\tfunction appendPhrase(df, str, isOrig, style) {\n\t\t\tif (isOrig) {\n\t\t\t\tdf.appendChild(document.createTextNode(str));\n\t\t\t} else {\n\t\t\t\tconst e = document.createElement('span');\n\t\t\t\te.appendChild(document.createTextNode(str));\n\t\t\t\tif (style.length) setClass(e, style);\n\t\t\t\tdf.appendChild(e);\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction isOriginalCharPhrase(ts, bgn, end) {\n\t\t\tfor (let i = bgn; i < end; i += 1) {\n\t\t\t\tconst t = ts[i];\n\t\t\t\tif (!CLS_ORIG.includes(t)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\tNS.jaSegmenter      = initialize;\n\t\tNS.jaApplySegmenter = apply;\n\t})();\n\n\t/**\n\t *\n\t * Style Class Utilities\n\t *\n\t * @author Takuto Yanagida\n\t * @version 2021-11-11\n\t *\n\t */\n\t\n\t\n\tfunction hasClass(tar, cls) {\n\t\tconst key = cls.substr(1);\n\t\tif (cls.startsWith(':')) {\n\t\t\treturn tar.dataset[key] !== undefined;\n\t\t} else {\n\t\t\treturn tar.classList.contains(key);\n\t\t}\n\t}\n\t\n\tfunction setClass(tar, cls, enabled = true, val = '') {\n\t\tconst key = cls.substr(1);\n\t\tif (cls.startsWith(':')) {\n\t\t\tif (enabled) {\n\t\t\t\ttar.dataset[key] = val;\n\t\t\t} else {\n\t\t\t\tdelete tar.dataset[key];\n\t\t\t}\n\t\t} else {\n\t\t\tconst c = [key, val].join('-');\n\t\t\tif (enabled) {\n\t\t\t\ttar.classList.add(c);\n\t\t\t} else {\n\t\t\t\ttar.classList.remove(c);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction getSelector(cls) {\n\t\tif (cls.startsWith(':')) {\n\t\t\treturn `*[data-${cls.substr(1).replace(/([A-Z])/g, c => '-' + c.charAt(0).toLowerCase())}]`;\n\t\t} else {\n\t\t\treturn `*${cls}`;\n\t\t}\n\t}\n\t\n\t/**\n\t *\n\t * Common Functions\n\t *\n\t * @author Takuto Yanagida\n\t * @version 2021-11-03\n\t *\n\t */\n\t\n\t\n\tfunction removeHeadWhiteSpaces(str) {\n\t\tconst mzs = str.match(/^[\\n\\r\\t ]*(\\u3000*)/);\n\t\tconst zs = (mzs && 1 < mzs.length) ? mzs[1] : '';\n\t\treturn zs + str.replace(/^\\s+/g, '');  // Trim left\n\t}\n\t\n\tfunction removeTailWhiteSpaces(str) {\n\t\treturn str.replace(/\\s+$/g, '');  // Trim right\n\t}\n\t\n\tfunction removeWhiteSpacesBetweenZenChars(str) {\n\t\t// White space character class excluding \\u3000\n\t\t// [ \\f\\n\\r\\t\\v​\\u00a0​\\u180e\\u2000​-\\u200a​\\u2028\\u2029\\u202f\\u205f​\\ufeff]\n\t\treturn str.replace(/([^\\x01-\\x7E\\xA1-\\xDF]+)([\\t\\n]+|[ \\f\\n\\r\\t\\v\\u00a0\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\ufeff]{2})([^\\x01-\\x7E\\xA1-\\xDF]+)/g, (match, g1, d, g2) => g1 + g2);\n\t}\n\t\n\n})(window['NACSS']);\n"]}