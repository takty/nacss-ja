{"version":3,"sources":["ja.js"],"names":["window","NS","hasClass","tar","cls","key","substr","startsWith","undefined","dataset","classList","contains","setClass","enabled","val","c","join","add","remove","apply","ts","opts","length","Object","assign","styleKerning","styleDisabled","doAssignAttribute","doDisableOnSelecting","t","kernElement","dict","f","removeKerning","removeEventListener","addEventListener","elm","s","Array","from","getElementsByTagName","df","document","createDocumentFragment","childNodes","appendChild","parentNode","replaceChild","applyToString","str","ks","getKerning","createFragment","nodeType","kernTextNode","tn","isHead","isTail","isEnd","textContent","mzs","match","replace","removeHeadWhiteSpaces","removeTailWhiteSpaces","removeWhiteSpacesBetweenZenChars","nt","nextSibling","getComputedStyle","display","innerText","parentNext","includes","p","HTMLElement","pd","isSiblingBlock","pp","n","greedy","isPreviousBlockGreedy","previousSibling","isBlock","tagName","trim","nextNodeText","assignAttr","strArray","ret","concat","l","i","c0","c1","a","has","push","k","Number","isInteger","createTextNode","slice","createElement","style","Set","addPairs","cs0","cs1","addSolos","head","h","applyKerning","applyKerningToString","sortProperNouns","styleSegment","properNouns","segmentElement","removeSegment","sty","className","ws","getSegment","pns","map","e","sort","b","segmentTextNode","IW","split","AW","AI1","PRE_KANJI","PRE_NUM","createCharTypeArray","fill","weightByCharTypes","strA","weightByPhrases","weightByPhraseAndType","CLS_ALL","CLS_WO_KANJI","CLS_ORIG","CHAR_PATTERNS","getCharType","test","PAIRS","II","KK","HH","NN","OO","TT","HI","NH","NK","NI","ON","NO","t0","t1","phrases","factor","offset","ph","phA","phL","bgn","idx0","indexOfArray","idx1","prevCts","nextCts","prevW","nextW","tsL","array","searchElement","fromIndex","j","temp","idx","appendPhrase","isOriginalCharPhrase","isOrig","end","applySegmenter","applySegmenterToString","g1","d","g2"],"mappings":"AAUA,aAEAA,OAAM,MAAkBA,OAAM,OAAmB,GACjDA,OAAM,MAAN,GAAwBA,OAAM,MAAN,IAAyB,GAGjD,CAAEC,IAYD,SAASC,EAASC,EAAKC,GACtB,MAAMC,EAAMD,EAAIE,OAAO,GACvB,OAAIF,EAAIG,WAAW,UACUC,IAArBL,EAAIM,QAAQJ,GAEZF,EAAIO,UAAUC,SAASN,GAIhC,SAASO,EAAST,EAAKC,EAAKS,GAAU,EAAMC,EAAM,IACjD,MAAMT,EAAMD,EAAIE,OAAO,GACvB,GAAIF,EAAIG,WAAW,KACdM,EACHV,EAAIM,QAAQJ,GAAOS,SAEZX,EAAIM,QAAQJ,OAEd,CACN,MAAMU,EAAI,CAACV,EAAKS,GAAKE,KAAK,KACtBH,EACHV,EAAIO,UAAUO,IAAIF,GAElBZ,EAAIO,UAAUQ,OAAOH,IAaxB,CAWC,SAASI,EAAMC,EAAIC,EAAO,IACzB,GAAkB,IAAdD,EAAGE,OAAP,CAEAD,EAAOE,OAAOC,OAAO,CACpBC,aAAsB,UACtBC,cAAsB,eACtBC,mBAAsB,EACtBC,sBAAsB,GACpBP,GAEH,IAAK,MAAMQ,KAAKT,EAEf,GADAU,EAAYD,EAAGE,EAAMV,GACjBA,EAAI,mBAAyBA,EAAI,qBAA0B,CAC9D,MAAMW,EAAI,KACTC,EAAcJ,EAAGR,GACjBQ,EAAEK,oBAAoB,cAAeF,IAEtCH,EAAEM,iBAAiB,cAAeH,KAKrC,SAASC,EAAcG,EAAKf,GAC3B,IAAK,MAAMgB,KAAKC,MAAMC,KAAKH,EAAII,qBAAqB,SACnD,GAAItC,EAASmC,EAAGhB,EAAKI,cAAe,CACnC,MAAMgB,EAAKC,SAASC,yBACpB,IAAK,MAAM5B,KAAKuB,MAAMC,KAAKF,EAAEO,YAC5BH,EAAGI,YAAY9B,GAEhBsB,EAAES,WAAWC,aAAaN,EAAIJ,IAKjC,SAASW,EAAcC,EAAK5B,EAAO,IAClCA,EAAOE,OAAOC,OAAO,CACpBC,aAAmB,UACnBC,cAAmB,eACnBC,mBAAmB,GACjBN,GAEH,MAAM6B,EAAKC,EAAWF,EAAKlB,GAAM,EAAOV,EAAKM,mBAC7C,OAAIuB,EAAG5B,OACC8B,EAAeH,EAAKC,EAAI7B,GAEzB,KAOR,SAASS,EAAYM,EAAKL,EAAMV,GAC/B,IAAK,MAAMN,KAAKuB,MAAMC,KAAKH,EAAIQ,YACX,IAAf7B,EAAEsC,SACAnD,EAASa,EAAGM,EAAKK,gBAAgBI,EAAYf,EAAGgB,EAAMV,GAClC,IAAfN,EAAEsC,UACZC,EAAavC,EAAGgB,EAAMV,GAKzB,SAASiC,EAAaC,EAAIxB,EAAMV,GAC/B,MAAOmC,EAAQC,GAAUC,EAAMH,GAE/B,IAAIN,EAAMM,EAAGI,YACTH,IAAQP,EA+gBd,SAA+BA,GAC9B,MAAMW,EAAMX,EAAIY,MAAM,wBAEtB,OADYD,GAAO,EAAIA,EAAItC,OAAUsC,EAAI,GAAK,IAClCX,EAAIa,QAAQ,QAAS,IAlhBdC,CAAsBd,IACpCQ,IAAQR,EAohBd,SAA+BA,GAC9B,OAAOA,EAAIa,QAAQ,QAAS,IArhBTE,CAAsBf,IACxCA,EAAMgB,EAAiChB,GAEvC,IAAIiB,EAAK,GAIT,GAHIX,EAAGY,aAA2C,IAA5BZ,EAAGY,YAAYd,UAA+D,WAA7Ce,iBAAiBb,EAAGY,aAAaE,UACvFH,EAAKX,EAAGY,YAAYG,YAEhBf,EAAGY,aAAeZ,EAAGT,WAAWqB,YAAa,CACjD,MAAMI,EAAahB,EAAGT,WAAWqB,YACjC,GAA4B,IAAxBI,EAAWlB,SAAgB,CAClBe,iBAAiBG,GAAYF,QACjCG,SAAS,YAChBN,EAAKK,EAAWD,WAGU,IAAxBC,EAAWlB,WACda,EAAKK,EAAWZ,aAIlB,MAAMT,EAAKC,EAAWF,EAAKlB,EAAMyB,EAAQU,EAAI7C,EAAKM,mBAClD,GAAIuB,EAAG5B,OAAQ,CACd,MAAMU,EAAIoB,EAAeH,EAAKC,EAAI7B,GAClCkC,EAAGT,WAAWC,aAAaf,EAAGuB,IAIhC,SAASG,EAAMH,GACd,MAAMkB,EAAIlB,EAAGT,WACb,KAAM2B,aAAaC,aAAc,MAAO,EAAC,GAAO,GAChD,MAAMC,EAAKP,iBAAiBK,GAAGJ,QAC/B,IAAKM,EAAGH,SAAS,UAChB,OAAOI,EAAerB,GAEvB,GAAW,iBAAPoB,EAAuB,CAC1B,GAA4B,IAAxBF,EAAE7B,WAAWtB,OAChB,OAAOsD,EAAerB,GAEvB,MAAMsB,EAAKJ,EAAE3B,WACb,GAAI+B,EAAI,CAEP,IADYT,iBAAiBS,GAAIR,QACxBG,SAAS,UACjB,OAAOI,EAAeH,GAAG,IAI5B,MAAO,EAAC,GAAO,GAGhB,SAASG,EAAeE,EAAGC,GAAS,GACnC,MAAO,CAACA,EAASC,EAAsBF,EAAEG,iBAAmBC,EAAQJ,EAAEG,iBAAkBC,EAAQJ,EAAEX,cAGnG,SAASe,EAAQJ,GAChB,OAAU,OAANA,GACEA,aAAaJ,cACD,OAAdI,EAAEK,UACEf,iBAAiBU,GAAGT,QAAQG,SAAS,WAG9C,SAASQ,EAAsBF,GAC9B,OAAa,CACZ,GAAU,OAANA,EAAY,OAAO,EACvB,GAAmB,IAAfA,EAAEzB,SACL,MAAkB,OAAdyB,EAAEK,UACEf,iBAAiBU,GAAGT,QAAQG,SAAS,UAE9C,GAAmB,IAAfM,EAAEzB,WACAyB,EAAEnB,YAAYyB,OAAQ,OAAO,EAEnCN,EAAIA,EAAEG,iBAQR,SAAS9B,EAAWF,EAAKlB,EAAMyB,EAAQ6B,EAAcC,GACpD,IAAIC,EAAWjD,MAAMC,KAAKU,GAC1B,MAAMuC,EAAM,GAERH,EAAa/D,SAChBiE,EAAWA,EAASE,OAAOnD,MAAMC,KAAK8C,KAEvC,IAAIK,EAAI,EAER,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAASjE,OAAQqE,GAAK,EAAG,CAC5C,MAAMC,EAAKL,EAASI,GACdE,EAAKN,EAASI,EAAI,GAExB,IAAIG,EAAI,GACG,KAAPF,GAAoB,KAAPC,GAAa9D,EAAKgE,IAAIH,EAAKC,KAC3CC,EAAIR,EAAa,IAAM,0BAEd,IAANK,GAAWnC,GAAiB,KAAPoC,GAAa7D,EAAKgE,IAAIH,KAC9CE,GAAKR,EAAa,IAAM,sBAErBQ,EAAExE,QACDoE,IACHF,EAAIQ,KAAKN,GACTA,EAAI,GAELF,EAAIQ,KAAKF,IAETJ,GAAK,EAIP,OADIF,EAAIlE,QAAUoE,GAAGF,EAAIQ,KAAKN,GACvBF,EAGR,SAASpC,EAAeH,EAAKC,EAAI7B,GAChC,MAAMkE,EAAWjD,MAAMC,KAAKU,GACtBjB,EAAIU,SAASC,yBACnB,IAAIgD,EAAI,EACR,IAAK,MAAMM,KAAK/C,EACf,GAAIgD,OAAOC,UAAUF,GAAI,CACxB,MAAMnB,EAAIpC,SAAS0D,eAAeb,EAASc,MAAMV,EAAGA,EAAIM,GAAGjF,KAAK,KAChEgB,EAAEa,YAAYiC,GACda,GAAKM,MACC,CACN,MAAMnB,EAAIpC,SAAS4D,cAAc,QACjCxB,EAAEjC,YAAYH,SAAS0D,eAAeb,EAASc,MAAMV,EAAGA,EAAI,GAAG3E,KAAK,MAChEiF,EAAE3E,QAAU,EACfV,EAASkE,EAAGzD,EAAKI,cAAc,EAAMwE,GAErCnB,EAAEyB,MAAQN,EAEXjE,EAAEa,YAAYiC,GACda,GAAK,EAGP,OAAO3D,EAOR,MAAMD,EAAO,IAAIyE,IACjB,CAQC,SAASC,EAAS1E,EAAM2E,EAAKC,GAC5B,IAAK,MAAMf,KAAMc,EAChB,IAAK,MAAMb,KAAMc,EAChB5E,EAAKd,IAAI2E,EAAKC,GAKjB,SAASe,EAAS7E,EAAM8E,GACvB,IAAK,MAAMC,KAAKD,EACf9E,EAAKd,IAAI6F,GAjBXL,EAAS1E,EAAM,WAAY,aAC3B0E,EAAS1E,EAAM,YAAa,aAC5B0E,EAAS1E,EAAM,YAAa,aAC5B0E,EAAS1E,EAAM,YAAa,aAC5B0E,EAAS1E,EAAM,YAAa,aAC5B6E,EAAS7E,EAAM,aAiBhB9B,EAAG8G,aAAuB5F,EAC1BlB,EAAG+G,qBAAuBhE,EAE3B,CAWC,SAAS7B,EAAMC,EAAIC,EAAO,IACzB,GAAkB,IAAdD,EAAGE,OAAP,CAQA2F,EANA5F,EAAOE,OAAOC,OAAO,CACpB0F,aAAsB,GACtBxF,cAAsB,oBACtBE,sBAAsB,EACtBuF,YAAsB,IACpB9F,IAGH,IAAK,MAAMQ,KAAKT,EAEf,GADAgG,EAAevF,EAAGR,GACdA,EAAI,qBAA0B,CACjC,MAAMW,EAAI,KACTqF,EAAcxF,EAAGR,GACjBQ,EAAEK,oBAAoB,cAAeF,IAEtCH,EAAEM,iBAAiB,cAAeH,KAKrC,SAASqF,EAAcjF,EAAKf,GAC3B,MAAMiG,EAAMjG,EAAK6F,aACjB,IAAK,MAAM7E,KAAKC,MAAMC,KAAKH,EAAII,qBAAqB,SACnD,GAAoB,IAAf8E,EAAIhG,QAAgC,KAAhBe,EAAEkF,WAAqBrH,EAASmC,EAAGiF,GAAM,CACjE,MAAM7E,EAAKC,SAASC,yBACpB,IAAK,MAAM5B,KAAKuB,MAAMC,KAAKF,EAAEO,YAC5BH,EAAGI,YAAY9B,GAEhBsB,EAAES,WAAWC,aAAaN,EAAIJ,IAKjC,SAASW,EAAcC,EAAK5B,EAAO,IAMlC4F,EALA5F,EAAOE,OAAOC,OAAO,CACpB0F,aAAe,GACfxF,cAAe,oBACfyF,YAAe,IACb9F,IAGH,MAAOD,EAAIoG,GAAMC,EAAWxE,EAAK5B,EAAK8F,aACtC,OAAO/D,EAAeH,EAAK7B,EAAIoG,EAAInG,GAGpC,SAAS4F,EAAgB5F,GACxB,MAAMqG,EAAMrG,EAAI,YAAgBsG,KAAIC,GAAKtF,MAAMC,KAAKqF,KACpDF,EAAIG,MAAK,CAAC/B,EAAGgC,IACLA,EAAExG,OAASwE,EAAExE,SAErBD,EAAI,YAAkBqG,EAOvB,SAASN,EAAehF,EAAKf,GAC5B,IAAK,MAAMN,KAAKuB,MAAMC,KAAKH,EAAIQ,YACX,IAAf7B,EAAEsC,SACAnD,EAASa,EAAGM,EAAKK,gBAAgB0F,EAAerG,EAAGM,GAC/B,IAAfN,EAAEsC,UACZ0E,EAAgBhH,EAAGM,GAKtB,SAAS0G,EAAgBxE,EAAIlC,GAC5B,IAAI4B,EAAMM,EAAGI,YACbV,EAAMgB,EAAiChB,GAEvC,MAAO7B,EAAIoG,GAAMC,EAAWxE,EAAK5B,EAAK8F,aAChCnF,EAAIoB,EAAeH,EAAK7B,EAAIoG,EAAInG,GACtCkC,EAAGT,WAAWC,aAAaf,EAAGuB,GAO/B,MAAMyE,EAAK,0lCAA0lCC,MAAM,KACrmCC,EAAK,0MAA0MD,MAAM,KAErNE,EAAY,4BAA4BF,MAAM,KAC9CG,EAAY,MAAMH,MAAM,KACxBI,EAAY,MAAMJ,MAAM,KAE9B,SAASR,EAAWxE,EAAKkE,GACxB,MAAM/F,EAAKkH,EAAoBrF,GACzBuE,EAAKlF,MAAMlB,EAAGE,QAAQiH,KAAK,GAEjCC,EAAkBpH,EAAIoG,GAEtB,MAAMiB,EAAOnG,MAAMC,KAAKU,GASxB,OARIkE,EAAY7F,QAAQoH,EAAgBD,EAAMjB,EAAIL,GAAc,GAChEuB,EAAgBD,EAAMjB,EAAIQ,GAAK,GAC/BU,EAAgBD,EAAMjB,EAAIU,EAAI,GAE9BQ,EAAgBD,EAAMjB,EAAIW,GAAM,EAAG,GACnCQ,EAAsBF,EAAMrH,EAAIoG,EAAIY,EAAWQ,EAAc,KAAM,EAAG,GACtED,EAAsBF,EAAMrH,EAAIoG,EAAIa,EAAWQ,EAAc,IAAM,EAAG,GAE/D,CAACzH,EAAIoG,GAOb,MAAMqB,EAAe,WACfD,EAAe,YACfE,EAAe,MAEfC,EAAgB,CACrB,CAAC,IAAK,qBACN,CAAC,IAAK,qBACN,CAAC,IAAK,gBACN,CAAC,IAAK,WACN,CAAC,IAAK,gBACN,CAAC,IAAK,iDACN,CAAC,IAAK,aACN,CAAC,IAAK,QAGP,SAAST,EAAoBrF,GAC5B,MAAM7B,EAAK,GACX,IAAK,MAAML,KAAKkC,EACf7B,EAAG4E,KAAKgD,EAAYjI,IAErB,OAAOK,EAGR,SAAS4H,EAAYjI,GACpB,IAAK,MAAOc,EAAG4C,KAAMsE,EACpB,GAAItE,EAAEwE,KAAKlI,GAAI,OAAOc,EAEvB,MAAO,IAOR,MAAMqH,EAAQ,CACb,MAAO,EAAG,KAAM,EAChB,KAAM,EACN,KAAM,GAAI,MAAO,GACjB,MAAO,EAAG,MAAO,EACjBC,GAAM,EAAGC,GAAM,EAAGC,GAAM,EAAIC,GAAM,EAAGC,GAAM,EAAGC,GAAM,EACpDC,GAAM,EACNC,GAAM,EAAGC,GAAM,EAAGC,GAAM,EACxBC,GAAM,EAAGC,GAAM,GAGhB,SAAStB,EAAkBpH,EAAIoG,GAC9B,IAAK,IAAI7B,EAAI,EAAGA,EAAIvE,EAAGE,OAAQqE,GAAK,EAAG,CACtC,MAAMoE,EAAK3I,EAAGuE,EAAI,GACZqE,EAAK5I,EAAGuE,GACd6B,EAAG7B,KAAOuD,EAAMa,EAAKC,IAAO,IAAMd,EAAM,IAAMc,IAAO,IAAMd,EAAMa,EAAK,MAAQ,IA2DhF,SAASrB,EAAgBD,EAAMjB,EAAIyC,EAASC,EAAQC,EAAS,GAC5D,IAAK,MAAMC,KAAMH,EAAS,CACzB,MAAMI,EAAM/H,MAAMC,KAAK6H,GACjBE,EAAMD,EAAI/I,OAEhB,IAAK,IAAIiJ,EAAM,IAAK,CACnB,MAAMC,EAAOC,EAAahC,EAAM4B,EAAKE,GACrC,IAAc,IAAVC,EAAa,MACjB,MAAME,EAAOF,EAAOF,EAEpB9C,EAAGgD,EAAOL,KAAYG,EAAMH,GAAUD,EACtC,IAAK,IAAIvE,EAAI,EAAGA,EAAI2E,EAAMH,EAAQxE,GAAK,EACtC6B,EAAGgD,EAAOL,EAASxE,IAAO2E,EAAMH,EAEjCI,EAAMG,IAKT,SAAS/B,EAAsBF,EAAMrH,EAAIoG,EAAIyC,EAASU,EAASC,EAASC,EAAOC,GAC9E,MAAMC,EAAM3J,EAAGE,OAEf,IAAK,MAAM8I,KAAMH,EAAS,CACzB,MAAMI,EAAM/H,MAAMC,KAAK6H,GACjBE,EAAMD,EAAI/I,OAEhB,IAAK,IAAIiJ,EAAM,IAAM,CACpB,MAAMC,EAAOC,EAAahC,EAAM4B,EAAKE,GACrC,IAAc,IAAVC,EAAa,MACjB,MAAME,EAAOF,EAAOF,EAEpB,IACW,IAATE,GAA0B,IAATA,GAAcG,EAAQnG,SAASpD,EAAGoJ,EAAO,OAC1DE,IAASK,GAAQL,EAAOK,GAAOH,EAAQpG,SAASpD,EAAGsJ,KACnD,CACDlD,EAAGgD,IAASK,EACRH,EAAOlD,EAAGlG,SAAQkG,EAAGkD,IAASI,GAClC,IAAK,IAAInF,EAAI,EAAGA,EAAI2E,EAAK3E,GAAK,EAAG6B,EAAGgD,EAAO7E,IAAM2E,EAElDC,EAAMG,IAKT,SAASD,EAAaO,EAAOC,EAAeC,EAAY,GACvD,GAAIF,MAAAA,EACH,OAAQ,EAET,GAAqB,IAAjBA,EAAM1J,OACT,OAAO,EAER,IAAK,IAAIqE,EAAIuF,EAAWvF,EAAIqF,EAAM1J,OAAS2J,EAAc3J,OAAS,EAAGqE,GAAK,EAAG,CAC5E,IAAI9B,GAAQ,EAEZ,IAAK,IAAIsH,EAAI,EAAGA,EAAIF,EAAc3J,OAAQ6J,GAAK,EAC9C,GAAIH,EAAMrF,EAAIwF,KAAOF,EAAcE,GAAI,CACtCtH,GAAQ,EACR,MAGF,GAAIA,EACH,OAAO8B,EAGT,OAAQ,EAOT,SAASvC,EAAeH,EAAK7B,EAAIoG,EAAInG,GACpC,MAAMoB,EAAKC,SAASC,yBACpB,IAAIyI,EAAO,GACPb,EAAO,EAEPc,EAAM,EACV,IAAK,MAAMtK,KAAKkC,EAAK,CACpB,GAAIuE,EAAG6D,IAAQ,EAAG,CAEjBC,EAAa7I,EAAI2I,EADFG,EAAqBnK,EAAImJ,EAAKc,GACdhK,EAAK6F,cACpCkE,EAAO,GACPb,EAAOc,EAERD,GAAQrK,EACRsK,GAAQ,EAET,GAAID,EAAK9J,OAAQ,CAEhBgK,EAAa7I,EAAI2I,EADFG,EAAqBnK,EAAImJ,EAAKnJ,EAAGE,QACjBD,EAAK6F,cAErC,OAAOzE,EAGR,SAAS6I,EAAa7I,EAAIQ,EAAKuI,EAAQjF,GACtC,GAAIiF,EACH/I,EAAGI,YAAYH,SAAS0D,eAAenD,QACjC,CACN,MAAM2E,EAAIlF,SAAS4D,cAAc,QACjCsB,EAAE/E,YAAYH,SAAS0D,eAAenD,IAClCsD,EAAMjF,QAAQV,EAASgH,EAAGrB,GAC9B9D,EAAGI,YAAY+E,IAIjB,SAAS2D,EAAqBnK,EAAImJ,EAAKkB,GACtC,IAAK,IAAI9F,EAAI4E,EAAK5E,EAAI8F,EAAK9F,GAAK,EAAG,CAClC,MAAM9D,EAAIT,EAAGuE,GACb,IAAKmD,EAAStE,SAAS3C,GACtB,OAAO,EAGT,OAAO,EAGR5B,EAAGyL,eAAyBvK,EAC5BlB,EAAG0L,uBAAyB3I,EAsB7B,SAASiB,EAAiChB,GAGzC,OAAOA,EAAIa,QAAQ,sIAAsI,CAACD,EAAO+H,EAAIC,EAAGC,IAAOF,EAAKE,MAxpBtL,CA4pBG9L,OAAM,MAAN","file":"ja.min.js","sourcesContent":["/**\n *\n * Japanese Text\n *\n * @author Takuto Yanagida\n * @version 2021-12-26\n *\n */\n\n\n'use strict';\n\nwindow['NACSS']       = window['NACSS']       || {};\nwindow['NACSS']['ja'] = window['NACSS']['ja'] || {};\n\n\n((NS) => {\n\n\t/**\n\t *\n\t * Style Class Utilities\n\t *\n\t * @author Takuto Yanagida\n\t * @version 2021-11-11\n\t *\n\t */\n\t\n\t\n\tfunction hasClass(tar, cls) {\n\t\tconst key = cls.substr(1);\n\t\tif (cls.startsWith(':')) {\n\t\t\treturn tar.dataset[key] !== undefined;\n\t\t} else {\n\t\t\treturn tar.classList.contains(key);\n\t\t}\n\t}\n\t\n\tfunction setClass(tar, cls, enabled = true, val = '') {\n\t\tconst key = cls.substr(1);\n\t\tif (cls.startsWith(':')) {\n\t\t\tif (enabled) {\n\t\t\t\ttar.dataset[key] = val;\n\t\t\t} else {\n\t\t\t\tdelete tar.dataset[key];\n\t\t\t}\n\t\t} else {\n\t\t\tconst c = [key, val].join('-');\n\t\t\tif (enabled) {\n\t\t\t\ttar.classList.add(c);\n\t\t\t} else {\n\t\t\t\ttar.classList.remove(c);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction getSelector(cls) {\n\t\tif (cls.startsWith(':')) {\n\t\t\treturn `*[data-${cls.substr(1).replace(/([A-Z])/g, c => '-' + c.charAt(0).toLowerCase())}]`;\n\t\t} else {\n\t\t\treturn `*${cls}`;\n\t\t}\n\t}\n\t\n\t{\n\t\t/**\n\t\t *\n\t\t * Kerning\n\t\t *\n\t\t * @author Takuto Yanagida\n\t\t * @version 2021-12-26\n\t\t *\n\t\t */\n\t\t\n\t\t\n\t\tfunction apply(ts, opts = {}) {\n\t\t\tif (ts.length === 0) return;\n\t\t\n\t\t\topts = Object.assign({\n\t\t\t\tstyleKerning        : ':ncKern',\n\t\t\t\tstyleDisabled       : ':ncNoKerning',\n\t\t\t\tdoAssignAttribute   : true,\n\t\t\t\tdoDisableOnSelecting: true,\n\t\t\t}, opts);\n\t\t\n\t\t\tfor (const t of ts) {\n\t\t\t\tkernElement(t, dict, opts);\n\t\t\t\tif (opts['doAssignAttribute'] && opts['doDisableOnSelecting']) {\n\t\t\t\t\tconst f = () => {\n\t\t\t\t\t\tremoveKerning(t, opts);\n\t\t\t\t\t\tt.removeEventListener('selectstart', f);\n\t\t\t\t\t};\n\t\t\t\t\tt.addEventListener('selectstart', f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction removeKerning(elm, opts) {\n\t\t\tfor (const s of Array.from(elm.getElementsByTagName('span'))) {\n\t\t\t\tif (hasClass(s, opts.styleKerning)) {\n\t\t\t\t\tconst df = document.createDocumentFragment();\n\t\t\t\t\tfor (const c of Array.from(s.childNodes)) {\n\t\t\t\t\t\tdf.appendChild(c);\n\t\t\t\t\t}\n\t\t\t\t\ts.parentNode.replaceChild(df, s);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction applyToString(str, opts = {}) {\n\t\t\topts = Object.assign({\n\t\t\t\tstyleKerning     : ':ncKern',\n\t\t\t\tstyleDisabled    : ':ncNoKerning',\n\t\t\t\tdoAssignAttribute: true,\n\t\t\t}, opts);\n\t\t\n\t\t\tconst ks = getKerning(str, dict, false, opts.doAssignAttribute);\n\t\t\tif (ks.length) {\n\t\t\t\treturn createFragment(str, ks, opts);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\t\n\t\t// -----------------------------------------------------------------------------\n\t\t\n\t\t\n\t\tfunction kernElement(elm, dict, opts) {\n\t\t\tfor (const c of Array.from(elm.childNodes)) {\n\t\t\t\tif (c.nodeType === 1) {  // ELEMENT_NODE\n\t\t\t\t\tif (!hasClass(c, opts.styleDisabled)) kernElement(c, dict, opts);\n\t\t\t\t} else if (c.nodeType === 3) {  // TEXT_NODE\n\t\t\t\t\tkernTextNode(c, dict, opts);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction kernTextNode(tn, dict, opts) {\n\t\t\tconst [isHead, isTail] = isEnd(tn);\n\t\t\n\t\t\tlet str = tn.textContent;\n\t\t\tif (isHead) str = removeHeadWhiteSpaces(str);\n\t\t\tif (isTail) str = removeTailWhiteSpaces(str);\n\t\t\tstr = removeWhiteSpacesBetweenZenChars(str);\n\t\t\n\t\t\tlet nt = '';\n\t\t\tif (tn.nextSibling && tn.nextSibling.nodeType === 1 && getComputedStyle(tn.nextSibling).display === 'inline') {\n\t\t\t\tnt = tn.nextSibling.innerText;\n\t\t\t}\n\t\t\tif (!tn.nextSibling && tn.parentNode.nextSibling) {\n\t\t\t\tconst parentNext = tn.parentNode.nextSibling;\n\t\t\t\tif (parentNext.nodeType === 1) {  // ELEMENT_NODE\n\t\t\t\t\tconst pnd = getComputedStyle(parentNext).display;\n\t\t\t\t\tif (pnd.includes('inline')) {\n\t\t\t\t\t\tnt = parentNext.innerText;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (parentNext.nodeType === 3) {  // TEXT_NODE\n\t\t\t\t\tnt = parentNext.textContent;\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\tconst ks = getKerning(str, dict, isHead, nt, opts.doAssignAttribute);\n\t\t\tif (ks.length) {\n\t\t\t\tconst f = createFragment(str, ks, opts);\n\t\t\t\ttn.parentNode.replaceChild(f, tn);\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction isEnd(tn) {\n\t\t\tconst p = tn.parentNode;\n\t\t\tif (!(p instanceof HTMLElement)) return [false, false];\n\t\t\tconst pd = getComputedStyle(p).display;\n\t\t\tif (!pd.includes('inline')) {  // Block\n\t\t\t\treturn isSiblingBlock(tn);\n\t\t\t}\n\t\t\tif (pd === 'inline-block') {  // Inline block\n\t\t\t\tif (p.childNodes.length !== 1) {  // The parent has multiple nodes.\n\t\t\t\t\treturn isSiblingBlock(tn);\n\t\t\t\t}\n\t\t\t\tconst pp = p.parentNode;\n\t\t\t\tif (pp) {\n\t\t\t\t\tconst ppd = getComputedStyle(pp).display;\n\t\t\t\t\tif (!ppd.includes('inline')) {\n\t\t\t\t\t\treturn isSiblingBlock(p, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [false, false];  // Not inline block\n\t\t}\n\t\t\n\t\tfunction isSiblingBlock(n, greedy = false) {\n\t\t\treturn [greedy ? isPreviousBlockGreedy(n.previousSibling) : isBlock(n.previousSibling), isBlock(n.nextSibling)];\n\t\t}\n\t\t\n\t\tfunction isBlock(n) {\n\t\t\tif (n === null) return true;\n\t\t\tif (!(n instanceof HTMLElement)) return false;\n\t\t\tif (n.tagName === 'BR') return true;\n\t\t\treturn !getComputedStyle(n).display.includes('inline');\n\t\t}\n\t\t\n\t\tfunction isPreviousBlockGreedy(n) {\n\t\t\twhile (true) {\n\t\t\t\tif (n === null) return true;\n\t\t\t\tif (n.nodeType === 1) {\n\t\t\t\t\tif (n.tagName === 'BR') return true;\n\t\t\t\t\treturn !getComputedStyle(n).display.includes('inline');\n\t\t\t\t}\n\t\t\t\tif (n.nodeType === 3) {\n\t\t\t\t\tif (!n.textContent.trim()) return true;\n\t\t\t\t}\n\t\t\t\tn = n.previousSibling;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t// -----------------------------------------------------------------------------\n\t\t\n\t\t\n\t\tfunction getKerning(str, dict, isHead, nextNodeText, assignAttr) {\n\t\t\tlet strArray = Array.from(str);\n\t\t\tconst ret = [];\n\t\t\n\t\t\tif (nextNodeText.length) {\n\t\t\t\tstrArray = strArray.concat(Array.from(nextNodeText));\n\t\t\t}\n\t\t\tlet l = 0;\n\t\t\n\t\t\tfor (let i = 0; i < strArray.length; i += 1) {\n\t\t\t\tconst c0 = strArray[i];\n\t\t\t\tconst c1 = strArray[i + 1];\n\t\t\n\t\t\t\tlet a = '';\n\t\t\t\tif (c0 !== '' && c1 !== '' && dict.has(c0 + c1)) {\n\t\t\t\t\ta = assignAttr ? 's' : 'letter-spacing:-0.4em;';\n\t\t\t\t}\n\t\t\t\tif (i === 0 && isHead && c0 !== '' && dict.has(c0)) {\n\t\t\t\t\ta += assignAttr ? 'h' : 'margin-left:-0.4em';\n\t\t\t\t}\n\t\t\t\tif (a.length) {\n\t\t\t\t\tif (l) {\n\t\t\t\t\t\tret.push(l);\n\t\t\t\t\t\tl = 0;\n\t\t\t\t\t}\n\t\t\t\t\tret.push(a);\n\t\t\t\t} else {\n\t\t\t\t\tl += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (ret.length && l) ret.push(l);\n\t\t\treturn ret;\n\t\t}\n\t\t\n\t\tfunction createFragment(str, ks, opts) {\n\t\t\tconst strArray = Array.from(str);\n\t\t\tconst f = document.createDocumentFragment();\n\t\t\tlet i = 0;\n\t\t\tfor (const k of ks) {\n\t\t\t\tif (Number.isInteger(k)) {\n\t\t\t\t\tconst n = document.createTextNode(strArray.slice(i, i + k).join(''));\n\t\t\t\t\tf.appendChild(n);\n\t\t\t\t\ti += k;\n\t\t\t\t} else {\n\t\t\t\t\tconst n = document.createElement('span');\n\t\t\t\t\tn.appendChild(document.createTextNode(strArray.slice(i, i + 1).join('')));\n\t\t\t\t\tif (k.length <= 2) {\n\t\t\t\t\t\tsetClass(n, opts.styleKerning, true, k);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tn.style = k;\n\t\t\t\t\t}\n\t\t\t\t\tf.appendChild(n);\n\t\t\t\t\ti += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn f;\n\t\t}\n\t\t\n\t\t\n\t\t// -----------------------------------------------------------------------------\n\t\t\n\t\t\n\t\tconst dict = new Set();\n\t\t{\n\t\t\taddPairs(dict, '、，。．・｜：　', '「『（［｛〈《【〔');\n\t\t\taddPairs(dict, '」』）］｝〉》】〕', '、，。．・｜：,.');\n\t\t\taddPairs(dict, '」』）］｝〉》】〕', '「『（［｛〈《【〔');\n\t\t\taddPairs(dict, '「『（［｛〈《【〔', '「『（［｛〈《【〔');\n\t\t\taddPairs(dict, '」』）］｝〉》】〕', '」』）］｝〉》】〕');\n\t\t\taddSolos(dict, '「『（［｛〈《【〔');\n\t\t\n\t\t\tfunction addPairs(dict, cs0, cs1) {\n\t\t\t\tfor (const c0 of cs0) {\n\t\t\t\t\tfor (const c1 of cs1) {\n\t\t\t\t\t\tdict.add(c0 + c1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\tfunction addSolos(dict, head) {\n\t\t\t\tfor (const h of head) {\n\t\t\t\t\tdict.add(h);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tNS.applyKerning         = apply;\n\t\tNS.applyKerningToString = applyToString;\n\t}\n\t{\n\t\t/**\n\t\t *\n\t\t * Segmenter\n\t\t *\n\t\t * @author Takuto Yanagida\n\t\t * @version 2021-12-26\n\t\t *\n\t\t */\n\t\t\n\t\t\n\t\tfunction apply(ts, opts = {}) {\n\t\t\tif (ts.length === 0) return;\n\t\t\n\t\t\topts = Object.assign({\n\t\t\t\tstyleSegment        : '',\n\t\t\t\tstyleDisabled       : ':ncNoSegmentation',\n\t\t\t\tdoDisableOnSelecting: true,\n\t\t\t\tproperNouns         : [],\n\t\t\t}, opts);\n\t\t\tsortProperNouns(opts);\n\t\t\n\t\t\tfor (const t of ts) {\n\t\t\t\tsegmentElement(t, opts);\n\t\t\t\tif (opts['doDisableOnSelecting']) {\n\t\t\t\t\tconst f = () => {\n\t\t\t\t\t\tremoveSegment(t, opts);\n\t\t\t\t\t\tt.removeEventListener('selectstart', f);\n\t\t\t\t\t};\n\t\t\t\t\tt.addEventListener('selectstart', f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction removeSegment(elm, opts) {\n\t\t\tconst sty = opts.styleSegment;\n\t\t\tfor (const s of Array.from(elm.getElementsByTagName('span'))) {\n\t\t\t\tif ((sty.length === 0 && s.className === '') || hasClass(s, sty)) {\n\t\t\t\t\tconst df = document.createDocumentFragment();\n\t\t\t\t\tfor (const c of Array.from(s.childNodes)) {\n\t\t\t\t\t\tdf.appendChild(c);\n\t\t\t\t\t}\n\t\t\t\t\ts.parentNode.replaceChild(df, s);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction applyToString(str, opts = {}) {\n\t\t\topts = Object.assign({\n\t\t\t\tstyleSegment : '',\n\t\t\t\tstyleDisabled: ':ncNoSegmentation',\n\t\t\t\tproperNouns  : [],\n\t\t\t}, opts);\n\t\t\tsortProperNouns(opts);\n\t\t\n\t\t\tconst [ts, ws] = getSegment(str, opts.properNouns);\n\t\t\treturn createFragment(str, ts, ws, opts);\n\t\t}\n\t\t\n\t\tfunction sortProperNouns(opts) {\n\t\t\tconst pns = opts['properNouns'].map(e => Array.from(e));\n\t\t\tpns.sort((a, b) => {\n\t\t\t\treturn b.length - a.length;\n\t\t\t});\n\t\t\topts['properNouns'] = pns;\n\t\t}\n\t\t\n\t\t\n\t\t// -------------------------------------------------------------------------\n\t\t\n\t\t\n\t\tfunction segmentElement(elm, opts) {\n\t\t\tfor (const c of Array.from(elm.childNodes)) {\n\t\t\t\tif (c.nodeType === 1) {  // ELEMENT_NODE\n\t\t\t\t\tif (!hasClass(c, opts.styleDisabled)) segmentElement(c, opts);\n\t\t\t\t} else if (c.nodeType === 3) {  // TEXT_NODE\n\t\t\t\t\tsegmentTextNode(c, opts);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction segmentTextNode(tn, opts) {\n\t\t\tlet str = tn.textContent;\n\t\t\tstr = removeWhiteSpacesBetweenZenChars(str);\n\t\t\n\t\t\tconst [ts, ws] = getSegment(str, opts.properNouns);\n\t\t\tconst f = createFragment(str, ts, ws, opts);\n\t\t\ttn.parentNode.replaceChild(f, tn);\n\t\t}\n\t\t\n\t\t\n\t\t// -----------------------------------------------------------------------------\n\t\t\n\t\t\n\t\tconst IW = 'そうはいうものの,そればかりでなく,ありとあらゆる,いずれにしても,かけがえのない,そうしてみると,そうすることで,そうでないなら,そうではあるが,それにくわえて,それはさておき,どっちにしても,とはいうものの,なぜかというと,にもかかわらず,いいかえると,いずれにしろ,いずれにせよ,いってみれば,おもいきった,しかしながら,じつのところ,じつはいうと,そうしないと,そうではなく,そのためには,それどころか,それにしても,それによって,そればかりか,それはそうと,どちらにせよ,どっちにせよ,いろいろな,このように,さまざまな,さもないと,したがって,そういえば,そうしたら,そうすると,そうすれば,そうなると,そうなれば,そのかわり,それなのに,それゆえに,たくまざる,だとしたら,だとすると,だとすれば,ではあるが,というのは,というのも,というより,なぜならば,やすやすと,ようするに,ああいう,ああした,あたかも,あらゆる,あるいは,いかなる,いつかは,いっぱい,いろんな,いわゆる,おおきな,おかしな,おそらく,おなじく,おまけに,かえって,かくして,かわりに,くわえて,ぐんぐん,けれども,こういう,こうして,このため,しかるに,しばらく,すなわち,そういう,そうした,そのうえ,そのくせ,そのため,そもそも,それから,それから,それでは,それでも,それとも,それなら,それには,たいした,たいそう,たくさん,だけども,たとえば,たやすく,ちいさな,ちなみに,というか,どういう,とうてい,ときどき,ところが,どころか,ところで,となると,となれば,とにかく,とはいえ,ともあれ,とりわけ,ないしは,なかでも,なぜなら,なぜなら,なだたる,なにしろ,ならびに,はじめに,はずべき,はなはだ,ひいては,ひょんな,ふとした,ほかには,ほかにも,めっきり,もしくは,もっとも,あまり,あらぬ,ありし,あんな,いただ,いつか,いつも,いわば,および,かかる,かなり,きたる,きっと,けれど,ことに,こんな,さらに,しかし,しかも,じつは,じゃあ,すぐに,すぐに,すると,そこで,そして,そっと,それで,それに,そんな,だから,だけど,ただし,だって,たまに,つぎに,つまり,ですが,とある,どうか,ときに,とくに,とても,とんだ,どんな,なにせ,なのに,ならば,ほんの,まさか,または,むこう,むしろ,もっと,もっと,もっと,ものの,やはり,ゆえに,ようは,よって,ああ,あの,ある,かつ,かの,けど,こう,この,さて,さる,そう,その,だが,ただ,では,でも,どう,どの,なお,なぜ,のに,また,もし,よく,わが'.split(',');\n\t\tconst AW = 'けれども,ところで,において,について,かしら,がてら,くらい,ぐらい,けれど,ってば,ながら,などの,なんぞ,ばかり,ものか,ものの,かい,から,かり,きり,こそ,さえ,しか,ずつ,だけ,だの,たり,つつ,では,ても,でも,とも,なぞ,など,なり,にて,には,ので,のに,のみ,ほど,まで,まま,もん,やら,より,か,が,さ,し,ぜ,ぞ,て,で,と,な,に,ね,の,は,ば,へ,も,や,よ,わ,を'.split(',');\n\t\t\n\t\tconst AI1       = 'がおこな,のような,があり,がおき,ができ,がでて'.split(',');\n\t\tconst PRE_KANJI = 'お,ご'.split(',');\n\t\tconst PRE_NUM   = '第,約'.split(',');\n\t\t\n\t\tfunction getSegment(str, properNouns) {\n\t\t\tconst ts = createCharTypeArray(str);\n\t\t\tconst ws = Array(ts.length).fill(0);\n\t\t\n\t\t\tweightByCharTypes(ts, ws);\n\t\t\n\t\t\tconst strA = Array.from(str);\n\t\t\tif (properNouns.length) weightByPhrases(strA, ws, properNouns, -1);  // Divide\n\t\t\tweightByPhrases(strA, ws, IW, -1);  // Divide\n\t\t\tweightByPhrases(strA, ws, AW, 1);  // Concat\n\t\t\n\t\t\tweightByPhrases(strA, ws, AI1, -1, 1);  // Divide with offset\n\t\t\tweightByPhraseAndType(strA, ts, ws, PRE_KANJI, CLS_ALL,      'H', -1, 2);\n\t\t\tweightByPhraseAndType(strA, ts, ws, PRE_NUM,   CLS_WO_KANJI, 'N',  0, 2);\n\t\t\n\t\t\treturn [ts, ws];\n\t\t}\n\t\t\n\t\t\n\t\t// -----------------------------------------------------------------------------\n\t\t\n\t\t\n\t\tconst CLS_WO_KANJI = 'SETIKNVO';\n\t\tconst CLS_ALL      = 'SETIKHNVO';\n\t\tconst CLS_ORIG     = 'NVO';\n\t\t\n\t\tconst CHAR_PATTERNS = [\n\t\t\t['S', /[「『（［｛〈《【〔〖〘〚＜“]/u],\n\t\t\t['E', /[」』）］｝〉》】〕〗〙〛＞”]/u],\n\t\t\t['T', /[、，。．？！を：・]/u],\n\t\t\t['I', /[ぁ-んゝ]/u],\n\t\t\t['K', /[ァ-ヴーｱ-ﾝﾞｰ]/u],\n\t\t\t['H', /[々〆ヵヶ]|[\\u4E00-\\u9FFF]|[\\u{20000}-\\u{2A6DF}]/u],  // Special Characters, CJK Unified Ideographs, CJK Unified Ideographs Extension B\n\t\t\t['N', /[0-9０-９]/u],\n\t\t\t['V', /\\s/u],\n\t\t];\n\t\t\n\t\tfunction createCharTypeArray(str) {\n\t\t\tconst ts = [];\n\t\t\tfor (const c of str) {\n\t\t\t\tts.push(getCharType(c));\n\t\t\t}\n\t\t\treturn ts;\n\t\t}\n\t\t\n\t\tfunction getCharType(c) {\n\t\t\tfor (const [t, p] of CHAR_PATTERNS) {\n\t\t\t\tif (p.test(c)) return t;\n\t\t\t}\n\t\t\treturn 'O';\n\t\t}\n\t\t\n\t\t\n\t\t// -----------------------------------------------------------------------------\n\t\t\n\t\t\n\t\tconst PAIRS = {\n\t\t\t'*S': -1, 'S*': 2,\n\t\t\t'*E': 2,\n\t\t\t'*T': 99, 'T*': -99,\n\t\t\t'*V': -1, 'V*': -1,\n\t\t\t'II': 1, 'KK': 1, 'HH': 1,  'NN': 1, 'OO': 1, 'TT': 1,\n\t\t\t'HI': 1,\n\t\t\t'NH': 2, 'NK': 1, 'NI': 1,\n\t\t\t'ON': 1, 'NO': 1,\n\t\t};\n\t\t\n\t\tfunction weightByCharTypes(ts, ws) {\n\t\t\tfor (let i = 1; i < ts.length; i += 1) {\n\t\t\t\tconst t0 = ts[i - 1];\n\t\t\t\tconst t1 = ts[i];\n\t\t\t\tws[i] += (PAIRS[t0 + t1] ?? 0) + (PAIRS['*' + t1] ?? 0) + (PAIRS[t0 + '*'] ?? 0);\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\t// -----------------------------------------------------------------------------\n\t\t\n\t\t\n\t\tfunction divideByPhrases(strA, ws, phrases) {\n\t\t\tfor (const ph of phrases) {\n\t\t\t\tconst phA = Array.from(ph);\n\t\t\t\tconst phL = phA.length;\n\t\t\n\t\t\t\tfor (let bgn = 0;;) {\n\t\t\t\t\tconst idx0 = indexOfArray(strA, phA, bgn);\n\t\t\t\t\tif (idx0 === -1) break;\n\t\t\t\t\tconst idx1 = idx0 + phL;\n\t\t\n\t\t\t\t\tws[idx0] -= phL;\n\t\t\t\t\tfor (let i = 1; i < phL; i += 1) ws[idx0 + i] += phL;\n\t\t\t\t\tbgn = idx1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction divideByCombinedPhrases(strA, ws, phrases, al) {\n\t\t\tfor (const ph of phrases) {\n\t\t\t\tconst phA = Array.from(ph);\n\t\t\t\tconst phL = phA.length;\n\t\t\n\t\t\t\tfor (let bgn = 0;;) {\n\t\t\t\t\tconst idx0 = indexOfArray(strA, phA, bgn);\n\t\t\t\t\tif (idx0 === -1) break;\n\t\t\t\t\tconst idx1 = idx0 + phL;\n\t\t\n\t\t\t\t\tws[idx0 + al] -= phL - al;\n\t\t\t\t\tfor (let i = 1; i < phL - al; i += 1) ws[idx0 + al + i] += phL - al;\n\t\t\t\t\tbgn = idx1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction concatByPhrases(strA, ws, phrases) {\n\t\t\tfor (const ph of phrases) {\n\t\t\t\tconst phA = Array.from(ph);\n\t\t\t\tconst phL = phA.length;\n\t\t\n\t\t\t\tfor (let bgn = 0; ;) {\n\t\t\t\t\tconst idx0 = indexOfArray(strA, phA, bgn);\n\t\t\t\t\tif (idx0 === -1) break;\n\t\t\t\t\tconst idx1 = idx0 + phL;\n\t\t\n\t\t\t\t\tws[idx0] += phL;\n\t\t\t\t\tfor (let i = 1; i < phL; i += 1) ws[idx0 + i] += phL;\n\t\t\t\t\tbgn = idx1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction weightByPhrases(strA, ws, phrases, factor, offset = 0) {\n\t\t\tfor (const ph of phrases) {\n\t\t\t\tconst phA = Array.from(ph);\n\t\t\t\tconst phL = phA.length;\n\t\t\n\t\t\t\tfor (let bgn = 0;;) {\n\t\t\t\t\tconst idx0 = indexOfArray(strA, phA, bgn);\n\t\t\t\t\tif (idx0 === -1) break;\n\t\t\t\t\tconst idx1 = idx0 + phL;\n\t\t\n\t\t\t\t\tws[idx0 + offset] += (phL - offset) * factor;\n\t\t\t\t\tfor (let i = 1; i < phL - offset; i += 1) {\n\t\t\t\t\t\tws[idx0 + offset + i] += (phL - offset);\n\t\t\t\t\t}\n\t\t\t\t\tbgn = idx1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction weightByPhraseAndType(strA, ts, ws, phrases, prevCts, nextCts, prevW, nextW) {\n\t\t\tconst tsL = ts.length;\n\t\t\n\t\t\tfor (const ph of phrases) {\n\t\t\t\tconst phA = Array.from(ph);\n\t\t\t\tconst phL = phA.length;\n\t\t\n\t\t\t\tfor (let bgn = 0; ;) {\n\t\t\t\t\tconst idx0 = indexOfArray(strA, phA, bgn);\n\t\t\t\t\tif (idx0 === -1) break;\n\t\t\t\t\tconst idx1 = idx0 + phL;\n\t\t\n\t\t\t\t\tif (\n\t\t\t\t\t\t(idx0 === 0   || (idx0 !== 0 && prevCts.includes(ts[idx0 - 1]))) &&\n\t\t\t\t\t\t(idx1 === tsL || (idx1 < tsL && nextCts.includes(ts[idx1])))\n\t\t\t\t\t) {\n\t\t\t\t\t\tws[idx0] += prevW;\n\t\t\t\t\t\tif (idx1 < ws.length) ws[idx1] += nextW;\n\t\t\t\t\t\tfor (let i = 1; i < phL; i += 1) ws[idx0 + i] += phL;\n\t\t\t\t\t}\n\t\t\t\t\tbgn = idx1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction indexOfArray(array, searchElement, fromIndex = 0) {\n\t\t\tif (array === null || array === undefined) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (array.length === 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tfor (let i = fromIndex; i < array.length - searchElement.length + 1; i += 1) {\n\t\t\t\tlet match = true;\n\t\t\n\t\t\t\tfor (let j = 0; j < searchElement.length; j += 1) {\n\t\t\t\t\tif (array[i + j] !== searchElement[j]) {\n\t\t\t\t\t\tmatch = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (match) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\t\t\n\t\t\n\t\t// -----------------------------------------------------------------------------\n\t\t\n\t\t\n\t\tfunction createFragment(str, ts, ws, opts) {\n\t\t\tconst df = document.createDocumentFragment();\n\t\t\tlet temp = '';\n\t\t\tlet bgn  = 0;\n\t\t\n\t\t\tlet idx = 0;\n\t\t\tfor (const c of str) {\n\t\t\t\tif (ws[idx] <= 0) {\n\t\t\t\t\tconst isOrig = isOriginalCharPhrase(ts, bgn, idx);\n\t\t\t\t\tappendPhrase(df, temp, isOrig, opts.styleSegment);\n\t\t\t\t\ttemp = '';\n\t\t\t\t\tbgn  = idx;\n\t\t\t\t}\n\t\t\t\ttemp += c;\n\t\t\t\tidx  += 1;\n\t\t\t}\n\t\t\tif (temp.length) {\n\t\t\t\tconst isOrig = isOriginalCharPhrase(ts, bgn, ts.length);\n\t\t\t\tappendPhrase(df, temp, isOrig, opts.styleSegment);\n\t\t\t}\n\t\t\treturn df;\n\t\t}\n\t\t\n\t\tfunction appendPhrase(df, str, isOrig, style) {\n\t\t\tif (isOrig) {\n\t\t\t\tdf.appendChild(document.createTextNode(str));\n\t\t\t} else {\n\t\t\t\tconst e = document.createElement('span');\n\t\t\t\te.appendChild(document.createTextNode(str));\n\t\t\t\tif (style.length) setClass(e, style);\n\t\t\t\tdf.appendChild(e);\n\t\t\t}\n\t\t}\n\t\t\n\t\tfunction isOriginalCharPhrase(ts, bgn, end) {\n\t\t\tfor (let i = bgn; i < end; i += 1) {\n\t\t\t\tconst t = ts[i];\n\t\t\t\tif (!CLS_ORIG.includes(t)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\tNS.applySegmenter         = apply;\n\t\tNS.applySegmenterToString = applyToString;\n\t}\n\t/**\n\t *\n\t * Common Functions\n\t *\n\t * @author Takuto Yanagida\n\t * @version 2021-11-03\n\t *\n\t */\n\t\n\t\n\tfunction removeHeadWhiteSpaces(str) {\n\t\tconst mzs = str.match(/^[\\n\\r\\t ]*(\\u3000*)/);\n\t\tconst zs = (mzs && 1 < mzs.length) ? mzs[1] : '';\n\t\treturn zs + str.replace(/^\\s+/g, '');  // Trim left\n\t}\n\t\n\tfunction removeTailWhiteSpaces(str) {\n\t\treturn str.replace(/\\s+$/g, '');  // Trim right\n\t}\n\t\n\tfunction removeWhiteSpacesBetweenZenChars(str) {\n\t\t// White space character class excluding \\u3000\n\t\t// [ \\f\\n\\r\\t\\v​\\u00a0​\\u180e\\u2000​-\\u200a​\\u2028\\u2029\\u202f\\u205f​\\ufeff]\n\t\treturn str.replace(/([^\\x01-\\x7E\\xA1-\\xDF]+)([\\t\\n]+|[ \\f\\n\\r\\t\\v\\u00a0\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\ufeff]{2})([^\\x01-\\x7E\\xA1-\\xDF]+)/g, (match, g1, d, g2) => g1 + g2);\n\t}\n\t\n\n})(window['NACSS']['ja']);\n"]}